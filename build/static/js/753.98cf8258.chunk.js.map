{"version":3,"file":"static/js/753.98cf8258.chunk.js","mappings":"gKAeA,IAZA,SAAuBA,GAAwD,IAArDC,EAAUD,EAAVC,WAAYC,EAAOF,EAAPE,QAASC,EAAUH,EAAVG,WAAYC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC/D,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,aAAc,SAACC,EAAQC,GAAQ,OAAKD,EAAOE,IAAMP,GAAU,YAAY,EACvEH,WAAYA,EACZC,QAASA,EACTC,WAAYA,EACZE,QAASA,IAAoB,GAGzC,C,qMCLMO,EAAY,SAACC,GAAI,OACnB,IAAIC,SAAQ,SAACC,EAASC,GAClB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,OAAQ,EAC7CJ,EAAOK,QAAU,SAACC,GAAK,OAAKP,EAAOO,EAAO,CAC9C,GAAG,EAqYP,MAnYA,SAAiBC,GACb,IAAAC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCxB,EAAU0B,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwBJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAoCR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA4CZ,EAAAA,EAAAA,WAAS,GAAMa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAAwDhB,EAAAA,EAAAA,WAAS,GAAMiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAhEE,EAAoBD,EAAA,GAC3BE,GADoDF,EAAA,IACZjB,EAAAA,EAAAA,UAAS,OAAKoB,GAAAlB,EAAAA,EAAAA,GAAAiB,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAsCvB,EAAAA,EAAAA,WAAS,GAAMwB,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA8B3B,EAAAA,EAAAA,WAAS,GAAM4B,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAwC/B,EAAAA,EAAAA,UAAS,IAAGgC,GAAA9B,EAAAA,EAAAA,GAAA6B,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAwCnC,EAAAA,EAAAA,UAAS,IAAGoC,GAAAlC,EAAAA,EAAAA,GAAAiC,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,IAAgCvC,EAAAA,EAAAA,UAAS,IAAGwC,IAAAtC,EAAAA,EAAAA,GAAAqC,GAAA,GAArCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,IAAgC3C,EAAAA,EAAAA,UAAS,GAAE4C,IAAA1C,EAAAA,EAAAA,GAAAyC,GAAA,GAA1BE,IAAFD,GAAA,GAAaA,GAAA,IAC5BE,IAA0C9C,EAAAA,EAAAA,WAAS,GAAK+C,IAAA7C,EAAAA,EAAAA,GAAA4C,GAAA,GAAjDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAoClD,EAAAA,EAAAA,WAAS,GAAMmD,IAAAjD,EAAAA,EAAAA,GAAAgD,GAAA,GAA5CE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAI1BG,GAAe,SAAHhF,GAAA,IAAgBiF,EAAWjF,EAArBmE,SAAQ,OAAoBC,GAAYa,EAAa,EAEvEC,GAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO1E,GAAI,OAAAwE,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACR/E,EAAUC,EAAK+E,eAAe,KAAD,EAAlD/E,EAAKgF,QAAOJ,EAAAK,KACZlC,EAAgB/C,EAAKgF,SACrBzC,GAAe,GACfY,EAAgBnD,EAAKkF,MAAM,wBAAAN,EAAAO,OAAA,GAAAT,EAAA,KAC9B,gBALkBU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,MAOnBC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,IAAkB,gBAAgBC,MAAK,SAAAC,GACnC,IAAMC,EAAI,GACP,OAAHD,QAAG,IAAHA,GAAAA,EAAKE,KAAKC,SAAQ,SAAAC,GACdH,EAAEI,KAAK,CACHC,IAAKF,EAAKhG,GACVA,GAAIgG,EAAKhG,GACTmG,MAAOH,EAAKG,MACZ1G,OAAQuG,EAAKvG,QAErB,IACAyB,EAAc2E,EAClB,IAAGO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,GACpC,GAAG,IAEH,IAAM9G,GAAU,CACZ,CACIiH,MAAO,KACPC,UAAW,KACXP,IAAK,KACLQ,MAAO,OACPC,MAAO,CAAEC,WAAY,WAEzB,CACIJ,MAAO,eACPC,UAAW,QACXP,IAAK,QACLW,OAAQ,SAACC,EAAGhH,GAAM,OACdH,EAAAA,EAAAA,KAAA,OAAKoH,UAAU,eAAeC,IAAKlH,EAAOqG,MAAOc,IAAI,UAAW,GAGxE,CACIT,MAAO,SACPC,UAAW,SACXP,IAAK,SACLW,OAAQ,SAACC,EAAGhH,GAAM,OACdH,EAAAA,EAAAA,KAACuH,EAAAA,EAAQ,CAAC9B,KAAK,OAAO+B,QAASrH,EAAOL,OAAQ2H,SAAU,kBAAMC,GAAgBvH,EAAO,GAAI,GAGjG,CACI0G,MAAO,SACPC,UAAW,SACXP,IAAK,SACLQ,MAAO,QACPG,OAAQ,SAACC,EAAGhH,GAAM,OACdH,EAAAA,EAAAA,KAAA,OAAKoH,UAAU,cAAcO,QAAS,kBAAMC,GAAUzH,EAAO,EAAC0H,SACtC,8CAElB,GAGd,CACIhB,MAAO,SACPC,UAAW,SACXP,IAAK,SACLQ,MAAO,QACPG,OAAQ,SAACC,EAAGhH,GAAM,OACdH,EAAAA,EAAAA,KAAA,OAAKoH,UAAU,cAAcO,QAAS,kBAAMG,GAAgB3H,EAAO,EAAC0H,SAC5C,oDAElB,IAKZD,GAAY,SAACvB,GACf3D,EAAgB2D,GAChB1E,GAAQ,EACZ,EAEMoG,GAAQ,eAAAC,GAAAlD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiD,IAAA,IAAAC,EAAA,OAAAnD,EAAAA,EAAAA,KAAAG,MAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,OAEe,OAFf8C,EAAA/C,KAAA,EAETjD,GAAkB,GAAMgG,EAAA9C,KAAA,EACNU,EAAAA,EAAAA,OAAqB,kBAADqC,OAAmB3F,EAAapC,KAAM,KAAD,EAAlE8H,EAAA3C,KACH0C,EAAgBvI,EAAW0I,QAAO,SAAAC,GAAO,OAAIA,EAAQjI,KAAOoC,EAAapC,EAAE,IACjFkB,EAAc2G,GACdK,EAAAA,GAAAA,QAAgB,yFAChB5G,GAAQ,GACRQ,GAAkB,GAAOgG,EAAA9C,KAAA,iBAAA8C,EAAA/C,KAAA,GAAA+C,EAAAK,GAAAL,EAAA,SAEzBhG,GAAkB,GAClBoG,EAAAA,GAAAA,MAAc,kQACd5B,QAAQC,IAAGuB,EAAAK,IAAK,yBAAAL,EAAAzC,OAAA,GAAAuC,EAAA,mBAEvB,kBAda,OAAAD,EAAApC,MAAA,KAAAC,UAAA,KAqBR6B,GAAkB,SAACrB,GACrB3D,EAAgB2D,GAChB5B,IAAc,EAClB,EAEMgE,GAAc,eAAAC,GAAA5D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA2D,IAAA,OAAA5D,EAAAA,EAAAA,KAAAG,MAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,OAES,OAFTuD,EAAAxD,KAAA,EAEfjD,GAAkB,GAAMyG,EAAAvD,KAAA,EACNU,EAAAA,EAAAA,MAAoB,kBAADqC,OAAmB3F,EAAapC,GAAE,KAAK,CAAEP,QAAS2C,EAAa3C,SAAU,KAAD,EAApG8I,EAAApD,KACTjE,GAAc,SAAAsH,GACV,IAAI3C,EAAI2C,EACFC,EAAQ5C,EAAE6C,WAAU,SAAAT,GAAO,OAAIA,EAAQjI,KAAOoC,EAAapC,EAAE,IAEnE,OADA6F,EAAE4C,GAAOhJ,QAAUoG,EAAE4C,GAAOhJ,OACrBoG,CACX,IACAqC,EAAAA,GAAAA,QAAgB,+FAChB9D,IAAc,GACdtC,GAAkB,GAAOyG,EAAAvD,KAAA,iBAAAuD,EAAAxD,KAAA,GAAAwD,EAAAJ,GAAAI,EAAA,SAEzBzG,GAAkB,GAClBoG,EAAAA,GAAAA,MAAc,kQACd5B,QAAQC,IAAGgC,EAAAJ,IAAK,yBAAAI,EAAAlD,OAAA,GAAAiD,EAAA,mBAEvB,kBAlBmB,OAAAD,EAAA9C,MAAA,KAAAC,UAAA,KA6BdmD,GAAW,eAAAC,GAAAnE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkE,IAAA,IAAAC,EAAAlD,EAAAC,EAAA,OAAAnB,EAAAA,EAAAA,KAAAG,MAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,OAK6B,OAL7B+D,EAAAhE,KAAA,EAEZjD,GAAkB,IACZgH,EAAW,IAAIE,UACZC,OAAO,QAASzF,GAAS,GAAGyB,cAAezB,GAAS,GAAGyB,cAAcG,MAC9E0D,EAASG,OAAO,SAAUlF,IAAegF,EAAA/D,KAAA,EACvBU,EAAAA,EAAAA,KAAmB,eAAgBoD,GAAU,KAAD,EAAxDlD,EAAGmD,EAAA5D,KACLU,EAAI,CACJK,IAAK1C,GAAS,GAAGyB,cAAciE,IAC/BlJ,GAAI4F,EAAIE,KAAK9F,GACbmG,MAAOgD,IAAIC,gBAAgB5F,GAAS,GAAGyB,eACvCxF,OAAQsE,IAEZ7C,EAAc,GAAD6G,QAAAsB,EAAAA,EAAAA,GAAK/J,GAAU,CAAEuG,KAC9BqC,EAAAA,GAAAA,QAAgB,qGAChBrF,GAAW,GACXY,GAAY,IACZO,IAAiB,GACjBlC,GAAkB,GAAOiH,EAAA/D,KAAA,iBAAA+D,EAAAhE,KAAA,GAAAgE,EAAAZ,GAAAY,EAAA,SAEzBjH,GAAkB,GAClBoG,EAAAA,GAAAA,MAAc,kQACd5B,QAAQC,IAAGwC,EAAAZ,IAAK,yBAAAY,EAAA1D,OAAA,GAAAwD,EAAA,mBAEvB,kBAxBgB,OAAAD,EAAArD,MAAA,KAAAC,UAAA,KA+BX8D,GAAsB,eAAAC,GAAA9E,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA6E,EAAOC,GAAO,IAAAC,EAAAC,EAAAC,EAAA,OAAAlF,EAAAA,EAAAA,KAAAG,MAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,OACjC0E,EAAyCD,EAAzCC,UAAWC,EAA8BF,EAA9BE,QAA8BF,EAArBvJ,KAAM0J,EAAeH,EAAfG,WACnB,CACXE,iBAAkB,SAAAC,GACd,IAAMC,EAAUC,KAAKC,MAAOH,EAAMI,OAASJ,EAAMK,MAAS,KAC1DxG,GAAYoG,GACI,MAAZA,GACAK,YAAW,kBAAMzG,GAAY,EAAE,GAAE,KAErCgG,EAAW,CAAEI,QAAUD,EAAMI,OAASJ,EAAMK,MAAS,KACzD,GAEJ,IACIV,EAAU,KACd,CAAE,MAAOrD,GACLsD,EAAQ,eACZ,CAAC,wBAAAE,EAAAxE,OAAA,GAAAmE,EAAA,KACJ,gBAjB2Bc,GAAA,OAAAf,EAAAhE,MAAA,KAAAC,UAAA,KAoBtBiC,GAAkB,SAACzB,GACrB3D,EAAgB2D,GAChBtE,GAAc,EAClB,EAEM6I,GAAc,eAAAC,GAAA/F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8F,IAAA,OAAA/F,EAAAA,EAAAA,KAAAG,MAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,cAAA0F,EAAA3F,KAAA,EAAA2F,EAAA1F,KAAA,EAETU,EAAAA,EAAAA,IAAkB,kBAADqC,OAAmB3F,EAAapC,GAAE,MAAI,OAC7DkB,GAAc,SAAAsH,GACV,IAAM3C,EAAI2C,EACJC,EAAQ5C,EAAE6C,WAAU,SAAAT,GAAO,OAAIA,EAAQjI,KAAOoC,EAAapC,EAAE,IAEnE,OADA6F,EAAE4C,GAAOtC,MAAQgD,IAAIC,gBAAgB5F,GAAS,GAAGyB,eAC1CY,CACX,IACApC,GAAY,IACZyE,EAAAA,GAAAA,QAAgB,gGAChBxG,GAAc,GAAOgJ,EAAA1F,KAAA,gBAAA0F,EAAA3F,KAAA,EAAA2F,EAAAvC,GAAAuC,EAAA,SAErBxC,EAAAA,GAAAA,MAAc,kQACdxG,GAAc,GACd4E,QAAQC,IAAGmE,EAAAvC,IAAK,yBAAAuC,EAAArF,OAAA,GAAAoF,EAAA,kBAEvB,kBAjBmB,OAAAD,EAAAjF,MAAA,KAAAC,UAAA,KAmBdmF,GAAmB,eAAAC,GAAAnG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkG,EAAOpB,GAAO,IAAAC,EAAAC,EAAAC,EAAA,OAAAlF,EAAAA,EAAAA,KAAAG,MAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,OAC9B0E,EAAyCD,EAAzCC,UAAWC,EAA8BF,EAA9BE,QAA8BF,EAArBvJ,KAAM0J,EAAeH,EAAfG,WACnB,CACXE,iBAAkB,SAAAC,GACd,IAAMC,EAAUC,KAAKC,MAAOH,EAAMI,OAASJ,EAAMK,MAAS,KAC1DxG,GAAYoG,GACI,MAAZA,GACAK,YAAW,kBAAMzG,GAAY,EAAE,GAAE,KAErCgG,EAAW,CAAEI,QAAUD,EAAMI,OAASJ,EAAMK,MAAS,KACzD,GAEJ,IACIV,EAAU,KACd,CAAE,MAAOrD,GACLsD,EAAQ,CAAEtD,IAAAA,GACd,CAAC,wBAAAyE,EAAAzF,OAAA,GAAAwF,EAAA,KACJ,gBAjBwBE,GAAA,OAAAH,EAAArF,MAAA,KAAAC,UAAA,KAyBnBwF,IACFC,EAAAA,EAAAA,MAAA,OAAAzD,SAAA,EACI7H,EAAAA,EAAAA,KAACuL,EAAAA,EAAY,KACbvL,EAAAA,EAAAA,KAAA,OACIgH,MAAO,CACHwE,UAAW,GACb3D,SACL,cAMT,OACIyD,EAAAA,EAAAA,MAAAG,EAAAA,SAAA,CAAA5D,SAAA,EACI7H,EAAAA,EAAAA,KAAC0L,EAAAA,EAAK,CAAChK,KAAMmB,EAAagE,MAAOpD,EAAckI,OAAQ,KAAMC,SA3PzC,WAAH,OAAS9I,GAAe,EAAO,EA2P4C+I,UAAQ,EAACC,OAAQ,OAAOjE,UAChH7H,EAAAA,EAAAA,KAAA,OACIsH,IAAI,UACJN,MAAO,CACHD,MAAO,QAEXM,IAAKhE,OAGbrD,EAAAA,EAAAA,KAAC0L,EAAAA,EAAK,CACF7E,MAAM,4OACNnF,KAAMuB,EACN8I,KAAM/C,GACNjC,MAAO,QACP7E,eAAgBA,EAChB0J,SAxGY,WACpB9H,GAAY,IACZZ,GAAW,EACf,EAsGY8I,WAAY,uCACZC,OAAQ,eACRC,OAAQ,UACRlF,MAAO,CAAEmF,IAAK,SAAUtE,UAExByD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,uBAAsBS,SAAA,EACjCyD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,WAAUS,SAAA,EACrB7H,EAAAA,EAAAA,KAAA,OAAKoH,UAAU,cAAaS,SAAC,2FAG7B7H,EAAAA,EAAAA,KAAA,OAAKoH,UAAU,aAAYS,SAAC,yDAIhCyD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,YAAWS,SAAA,EACtB7H,EAAAA,EAAAA,KAAA,OAAKoH,UAAU,cAAaS,UACxB7H,EAAAA,EAAAA,KAACoM,EAAAA,EAAM,CACHC,cAAe1C,GACf2C,SAAS,eACTzI,SAAUA,GACV0I,UAAW3H,GACX6C,SAAU/C,GAAamD,SAEH,GAAnBhE,GAAS2I,QAAenB,QAGjCrL,EAAAA,EAAAA,KAAA,OAAKoH,UAAU,aAAYS,UACvB7H,EAAAA,EAAAA,KAACuH,EAAAA,EAAQ,CAACC,QAASpD,GAAeqD,SAAU,SAACgF,GAAC,OAAKpI,GAAiBoI,EAAEC,OAAOlF,QAAQ,eAMrGxH,EAAAA,EAAAA,KAAC0L,EAAAA,EAAK,CACF7E,MAAM,+JACNnF,KAAMA,EACNqK,KAAMhE,GACN7F,eAAgBA,EAChB0J,SAhNS,WACjBjK,GAAQ,EACZ,EA+MYgL,cAAe,CAAEC,QAAQ,GACzBZ,WAAY,uCACZC,OAAQ,eACRC,OAAQ,UACRlF,MAAO,CACHmF,IAAK,YAGbnM,EAAAA,EAAAA,KAAC0L,EAAAA,EAAK,CACF7E,MAAM,4NACNnF,KAAM8C,GACNuH,KAAMtD,GACNvG,eAAgBA,EAChB0J,SAhMe,WACvBnH,IAAc,EAClB,EA+LYuH,WAAY,uCACZC,OAAQ,eACRC,OAAQ,UACRlF,MAAO,CACHmF,IAAK,YAGbnM,EAAAA,EAAAA,KAAC0L,EAAAA,EAAK,CACF7E,MAAM,mDACNE,MAAM,QACNrF,KAAMI,EACNiK,KAAMnB,GACN1I,eAAgBI,EAChBsJ,SAtGe,WACvB9H,GAAY,IACZ/B,GAAc,EAClB,EAoGYiK,WAAY,uCACZC,OAAQ,eACRC,OAAQ,UACRlF,MAAO,CACHmF,IAAK,SACPtE,UAEFyD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,0BAAyBS,SAAA,EACpC7H,EAAAA,EAAAA,KAAA,OAAKoH,UAAU,qBAAoBS,UAC/B7H,EAAAA,EAAAA,KAAA,KAAGoH,UAAU,uBAAsBS,SAAC,aAGxCyD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,sBAAqBS,SAAA,EAChC7H,EAAAA,EAAAA,KAAA,OAAKoH,UAAU,eAAeC,IAAiB,OAAZ5E,QAAY,IAAZA,OAAY,EAAZA,EAAc+D,SACjDxG,EAAAA,EAAAA,KAACoM,EAAAA,EAAM,CACHC,cAAerB,GACfsB,SAAS,eACTzI,SAAUA,GACV0I,UAAW3H,GACX6C,SAAU/C,GAAamD,SAEH,GAAnBhE,GAAS2I,QAAenB,cAKzCC,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,yBAAwBS,SAAA,EACnCyD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,2BAA0BS,SAAA,EACrC7H,EAAAA,EAAAA,KAAA,MAAA6H,SAAI,gDACJ7H,EAAAA,EAAAA,KAAA,OAAKoH,UAAU,aAAaO,QAvOvB,SAACtB,GAClBnD,GAAW,EACf,EAqOkE2E,SAAC,+DAEvD7H,EAAAA,EAAAA,KAAC6M,EAAAA,EAAc,CAAClN,WAAYA,EAAYC,QAASA,GAASC,YAAY,EAAOC,OAAoB,OAAZ2C,QAAY,IAAZA,OAAY,EAAZA,EAAcpC,UAInH,C","sources":["components/TableComponent.js","pages/Banners/Banners.js"],"sourcesContent":["import { Table } from 'antd';\r\nimport React from 'react';\r\n\r\nfunction TableComponent({ dataSource, columns, pagination, active, loading }) {\r\n    return (\r\n        <Table\r\n            rowClassName={(record, rowIndex) => record.id == active && 'active-row'}\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={pagination}\r\n            loading={loading ? loading : false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TableComponent;","import React, { useEffect, useState } from 'react';\r\nimport { Checkbox, message, Progress } from 'antd';\r\nimport TableComponent from '../../components/TableComponent';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport './Banners.css';\r\nimport { Modal, Upload } from 'antd';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n\r\nfunction Banners(props) {\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openUpdate, setOpenUpdate] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [confirmUpdateLoading, setConfirmUpdateLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [addOpen, setAddOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    const [fileList, setFileList] = useState([]);\r\n    const [progress, setProgress] = useState(0);\r\n    const [newItemActive, setNewItemActive] = useState(true);\r\n    const [openActive, setOpenActive] = useState(false);\r\n\r\n    const handlePreviewCancel = () => setPreviewOpen(false);\r\n\r\n    const handleChange = ({ fileList: newFileList }) => setFileList(newFileList);\r\n\r\n    const handlePreview = async (file) => {\r\n        file.preview = await getBase64(file.originFileObj);\r\n        setPreviewImage(file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('banners/list').then(res => {\r\n            const a = [];\r\n            res?.data.forEach(item => {\r\n                a.push({\r\n                    key: item.id,\r\n                    id: item.id,\r\n                    image: item.image,\r\n                    active: item.active\r\n                })\r\n            });\r\n            setDataSource(a);\r\n        }).catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: '65px',\r\n            style: { alignItems: \"center\" }\r\n        },\r\n        {\r\n            title: 'Banner image',\r\n            dataIndex: 'image',\r\n            key: 'image',\r\n            render: (_, record) => (\r\n                <img className='banner-image' src={record.image} alt='banner' />\r\n            ),\r\n        },\r\n        {\r\n            title: 'Active',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            render: (_, record) => (\r\n                <Checkbox name='late' checked={record.active} onChange={() => showActiveModal(record)} />\r\n            ),\r\n        },\r\n        {\r\n            title: 'Delete',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '110px',\r\n            render: (_, record) => (\r\n                <div className='delete-icon' onClick={() => showModal(record)}>\r\n                    {/* <TiDelete /> */}\r\n                    Удалить\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Update',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '120px',\r\n            render: (_, record) => (\r\n                <div className='update-icon' onClick={() => showUpdateModal(record)}>\r\n                    {/* <TiDelete /> */}\r\n                    Изменить\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const showModal = (item) => {\r\n        setSelectedItem(item);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            const res = await axiosInstance.delete(`banners/delete/${selectedItem.id}`);\r\n            const newDataSource = dataSource.filter(element => element.id !== selectedItem.id);\r\n            setDataSource(newDataSource);\r\n            message.success('Успешно удалено')\r\n            setOpen(false);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // ------------------------------ Change Active-------------------------------//\r\n    const showActiveModal = (item) => {\r\n        setSelectedItem(item);\r\n        setOpenActive(true);\r\n    };\r\n\r\n    const handleActiveOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            const res = await axiosInstance.patch(`banners/update/${selectedItem.id}/`, { active: !selectedItem.active });\r\n            setDataSource(previousState => {\r\n                let a = previousState;\r\n                const index = a.findIndex(element => element.id === selectedItem.id);\r\n                a[index].active = !a[index].active\r\n                return a\r\n            });\r\n            message.success('Успешно изменено')\r\n            setOpenActive(false);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleActiveCancel = () => {\r\n        setOpenActive(false);\r\n    };\r\n\r\n    //-----------------------------------------Add Modal-------------------------------------------------//\r\n    const showAddModal = (item) => {\r\n        setAddOpen(true);\r\n    };\r\n\r\n    const handleAddOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            const formData = new FormData();\r\n            formData.append(\"image\", fileList[0].originFileObj, fileList[0].originFileObj.name);\r\n            formData.append(\"active\", newItemActive);\r\n            const res = await axiosInstance.post(`banners/add/`, formData);\r\n            let a = {\r\n                key: fileList[0].originFileObj.uid,\r\n                id: res.data.id,\r\n                image: URL.createObjectURL(fileList[0].originFileObj),\r\n                active: newItemActive\r\n            }\r\n            setDataSource([...dataSource, a]);\r\n            message.success('Успешно добавлено');\r\n            setAddOpen(false);\r\n            setFileList([]);\r\n            setNewItemActive(true);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleAddCancel = () => {\r\n        setFileList([]);\r\n        setAddOpen(false);\r\n    };\r\n\r\n    const handleAddCustomRequest = async (options) => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n        const config = {\r\n            onUploadProgress: event => {\r\n                const percent = Math.floor((event.loaded / event.total) * 100);\r\n                setProgress(percent);\r\n                if (percent === 100) {\r\n                    setTimeout(() => setProgress(0), 1000);\r\n                }\r\n                onProgress({ percent: (event.loaded / event.total) * 100 });\r\n            }\r\n        };\r\n        try {\r\n            onSuccess(\"Ok\");\r\n        } catch (err) {\r\n            onError('Upload error');\r\n        }\r\n    };\r\n\r\n    //--------------------------------------Update Modal ------------------------------------//\r\n    const showUpdateModal = (item) => {\r\n        setSelectedItem(item);\r\n        setOpenUpdate(true);\r\n    };\r\n\r\n    const handleUpdateOk = async () => {\r\n        try {\r\n            await axiosInstance.put(`banners/update/${selectedItem.id}/`)\r\n            setDataSource(previousState => {\r\n                const a = previousState;\r\n                const index = a.findIndex(element => element.id === selectedItem.id);\r\n                a[index].image = URL.createObjectURL(fileList[0].originFileObj);\r\n                return a;\r\n            })\r\n            setFileList([]);\r\n            message.success('Успешно изменено!');\r\n            setOpenUpdate(false);\r\n        } catch (err) {\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!');\r\n            setOpenUpdate(false);\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const handleCustomRequest = async (options) => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n        const config = {\r\n            onUploadProgress: event => {\r\n                const percent = Math.floor((event.loaded / event.total) * 100);\r\n                setProgress(percent);\r\n                if (percent === 100) {\r\n                    setTimeout(() => setProgress(0), 1000);\r\n                }\r\n                onProgress({ percent: (event.loaded / event.total) * 100 });\r\n            }\r\n        };\r\n        try {\r\n            onSuccess(\"Ok\");\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n\r\n    const handleUpdateCancel = () => {\r\n        setFileList([])\r\n        setOpenUpdate(false);\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div\r\n                style={{\r\n                    marginTop: 8,\r\n                }}\r\n            >\r\n                Upload\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handlePreviewCancel} centered zIndex={'1001'}>\r\n                <img\r\n                    alt=\"example\"\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                    src={previewImage}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title=\"Выберите баннер и активность для добавления\"\r\n                open={addOpen}\r\n                onOk={handleAddOk}\r\n                width={'600px'}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleAddCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                style={{ top: '200px' }}\r\n            >\r\n                <div className='banner-add-container'>\r\n                    <div className='add-left'>\r\n                        <div className='add-picture'>\r\n                            Выберите баннер\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Активный\r\n                        </div>\r\n                    </div>\r\n                    <div className='add-right'>\r\n                        <div className='add-picture'>\r\n                            <Upload\r\n                                customRequest={handleAddCustomRequest}\r\n                                listType=\"picture-card\"\r\n                                fileList={fileList}\r\n                                onPreview={handlePreview}\r\n                                onChange={handleChange}\r\n                            >\r\n                                {fileList.length == 0 && uploadButton}\r\n                            </Upload>\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Checkbox checked={newItemActive} onChange={(e) => setNewItemActive(e.target.checked)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Modal>\r\n            <Modal\r\n                title=\"Вы уверены, что хотите удалить?\"\r\n                open={open}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                okButtonProps={{ danger: true }}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            />\r\n            <Modal\r\n                title=\"Вы уверены, что хотите изменить активност?\"\r\n                open={openActive}\r\n                onOk={handleActiveOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleActiveCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            />\r\n            <Modal\r\n                title=\"Изменить\"\r\n                width='750px'\r\n                open={openUpdate}\r\n                onOk={handleUpdateOk}\r\n                confirmLoading={confirmUpdateLoading}\r\n                onCancel={handleUpdateCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            >\r\n                <div className='banner-update-container'>\r\n                    <div className='banner-update-left'>\r\n                        <p className='banner-image-content'>Image</p>\r\n                        {/* <p>New Image</p> */}\r\n                    </div>\r\n                    <div className='banner-update-right'>\r\n                        <img className='banner-image' src={selectedItem?.image} />\r\n                        <Upload\r\n                            customRequest={handleCustomRequest}\r\n                            listType=\"picture-card\"\r\n                            fileList={fileList}\r\n                            onPreview={handlePreview}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {fileList.length == 0 && uploadButton}\r\n                        </Upload>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <div className='banners-container page'>\r\n                <div className='banners-header-container'>\r\n                    <h2>Баннеры</h2>\r\n                    <div className='add-button' onClick={showAddModal}>Добавлять</div>\r\n                </div>\r\n                <TableComponent dataSource={dataSource} columns={columns} pagination={false} active={selectedItem?.id} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Banners;"],"names":["_ref","dataSource","columns","pagination","active","loading","_jsx","Table","rowClassName","record","rowIndex","id","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","props","_useState","useState","_useState2","_slicedToArray","setDataSource","_useState3","_useState4","open","setOpen","_useState5","_useState6","openUpdate","setOpenUpdate","_useState7","_useState8","confirmLoading","setConfirmLoading","_useState9","_useState10","confirmUpdateLoading","_useState11","_useState12","selectedItem","setSelectedItem","_useState13","_useState14","previewOpen","setPreviewOpen","_useState15","_useState16","addOpen","setAddOpen","_useState17","_useState18","previewImage","setPreviewImage","_useState19","_useState20","previewTitle","setPreviewTitle","_useState21","_useState22","fileList","setFileList","_useState23","_useState24","setProgress","_useState25","_useState26","newItemActive","setNewItemActive","_useState27","_useState28","openActive","setOpenActive","handleChange","newFileList","handlePreview","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","originFileObj","preview","sent","name","stop","_x","apply","arguments","useEffect","axiosInstance","then","res","a","data","forEach","item","push","key","image","catch","err","console","log","title","dataIndex","width","style","alignItems","render","_","className","src","alt","Checkbox","checked","onChange","showActiveModal","onClick","showModal","children","showUpdateModal","handleOk","_ref3","_callee2","newDataSource","_context2","concat","filter","element","message","t0","handleActiveOk","_ref4","_callee3","_context3","previousState","index","findIndex","handleAddOk","_ref5","_callee4","formData","_context4","FormData","append","uid","URL","createObjectURL","_toConsumableArray","handleAddCustomRequest","_ref6","_callee5","options","onSuccess","onError","onProgress","_context5","onUploadProgress","event","percent","Math","floor","loaded","total","setTimeout","_x2","handleUpdateOk","_ref7","_callee6","_context6","handleCustomRequest","_ref8","_callee7","_context7","_x3","uploadButton","_jsxs","PlusOutlined","marginTop","_Fragment","Modal","footer","onCancel","centered","zIndex","onOk","cancelText","okText","okType","top","Upload","customRequest","listType","onPreview","length","e","target","okButtonProps","danger","TableComponent"],"sourceRoot":""}