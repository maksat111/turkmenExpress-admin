{"version":3,"file":"static/js/270.c096dc1c.chunk.js","mappings":"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","sources":["components/TableComponent.js","pages/Categories/Categories.js"],"sourcesContent":["import { Table } from 'antd';\r\nimport React from 'react';\r\n\r\nfunction TableComponent({ dataSource, columns, pagination, active, loading }) {\r\n    return (\r\n        <Table\r\n            rowClassName={(record, rowIndex) => record.id == active && 'active-row'}\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={pagination}\r\n            loading={loading ? loading : false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TableComponent;","import React, { useEffect, useState } from 'react';\r\nimport TableComponent from '../../components/TableComponent';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport { Modal, message, Upload, Checkbox, Select } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport './Categories.css';\r\nimport Input from 'antd/es/input/Input';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n\r\nfunction Categories() {\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [addOpen, setAddOpen] = useState(false);\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    const [newItem, setNewItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('categories/list').then(async (res) => {\r\n            res.data?.forEach(element => {\r\n                element.key = element.id\r\n            });\r\n            setDataSource(res?.data);\r\n        }).catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: '65px',\r\n        },\r\n        {\r\n            title: 'Название (рус.)',\r\n            dataIndex: 'name_ru',\r\n            key: 'name_ru',\r\n        },\r\n        {\r\n            title: 'Название (туркм.)',\r\n            dataIndex: 'name_tk',\r\n            key: 'name_tk',\r\n        },\r\n        {\r\n            title: 'Навзание (анг.)',\r\n            dataIndex: 'name_en',\r\n            key: 'name_en',\r\n        },\r\n        {\r\n            title: 'Logo',\r\n            dataIndex: 'image',\r\n            key: 'image',\r\n            render: (_, record) => (\r\n                <img className='brand-image' src={record.image} alt={record.name_ru} />\r\n            ),\r\n        },\r\n        {\r\n            title: 'Удалить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '110px',\r\n            render: (_, record) => (\r\n                <div className='delete-icon' onClick={() => showModal(record)}>\r\n                    Удалить\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Изменить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '120px',\r\n            render: (_, record) => (\r\n                <div className='update-icon' onClick={() => showAddModal(record)} >\r\n                    Изменить\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const showModal = (item) => {\r\n        setSelectedItem(item);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            const newDataSource = dataSource.filter(element => element.id !== selectedItem.id);\r\n            await axiosInstance.delete(`categoris/delete/${selectedItem.id}/`);\r\n            setDataSource(newDataSource);\r\n            message.success('Успешно удалено')\r\n            setOpen(false);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //-----------------------------------------Add Modal-------------------------------------------------//\r\n    const showAddModal = (item) => {\r\n        if (item.id) {\r\n            setSelectedItem(item);\r\n            setNewItem(item);\r\n        }\r\n        setAddOpen(true);\r\n    };\r\n\r\n    const handleAddOk = async () => {\r\n        setConfirmLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('name_ru', newItem.name_ru);\r\n        formData.append('name_en', newItem.name_en);\r\n        formData.append('name_tk', newItem.name_tk);\r\n        if (fileList.length !== 0) {\r\n            newItem.image = URL.createObjectURL(fileList[0]?.originFileObj);\r\n            formData.append(\"image\", fileList[0]?.originFileObj, fileList[0]?.originFileObj.name);\r\n        }\r\n        try {\r\n            if (newItem.id) {\r\n                const res = await axiosInstance.patch(`categoris/update/${newItem.id}/`, formData);\r\n                const index = dataSource.findIndex(item => item.id == newItem.id);\r\n                setDataSource(previousState => {\r\n                    const a = previousState;\r\n                    a[index].name_ru = newItem.name_ru;\r\n                    a[index].name_en = newItem.name_en;\r\n                    a[index].name_tk = newItem.name_tk;\r\n                    a[index].image = newItem.image;\r\n                    return a;\r\n                })\r\n            } else {\r\n                const res = await axiosInstance.post('categories/add/', formData);\r\n                setDataSource([...dataSource, newItem])\r\n            }\r\n            setNewItem(null);\r\n            message.success('Успешно!')\r\n            setAddOpen(false);\r\n            setFileList([]);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleAddCancel = () => {\r\n        setFileList([]);\r\n        setNewItem(null);\r\n        setAddOpen(false);\r\n    };\r\n\r\n    const handleAddCustomRequest = async (options) => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const config = {\r\n            headers: { \"content-type\": \"multipart/form-data\" },\r\n            onUploadProgress: event => {\r\n                const percent = Math.floor((event.loaded / event.total) * 100);\r\n                setProgress(percent);\r\n                if (percent === 100) {\r\n                    setTimeout(() => setProgress(0), 1000);\r\n                }\r\n                onProgress({ percent: (event.loaded / event.total) * 100 });\r\n            }\r\n        };\r\n        try {\r\n            onSuccess(\"Ok\");\r\n        } catch (err) {\r\n            onError('Upload error');\r\n        }\r\n    };\r\n\r\n    //-----------------------------------------upload--------------------------------------------//\r\n    const handleChange = ({ fileList: newFileList }) => setFileList(newFileList);\r\n\r\n    const handlePreviewCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        file.preview = await getBase64(file.originFileObj);\r\n        setPreviewImage(file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name);\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div\r\n                style={{\r\n                    marginTop: 8,\r\n                }}\r\n            >\r\n                Upload\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    const handleAddChange = (e) => {\r\n        setNewItem({ ...newItem, [e.target.name]: [e.target.value] });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Дополните детали для добавления\"\r\n                open={addOpen}\r\n                onOk={handleAddOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleAddCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                width={'600px'}\r\n                okType={'primary'}\r\n                style={{ top: '100px' }}\r\n            >\r\n                <div className='banner-add-container'>\r\n                    <div className='add-left'>\r\n                        <div className='add-column'>\r\n                            Название (рус.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Название (туркм.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Навзание (анг.):\r\n                        </div>\r\n                        <div className='add-picture'>\r\n                            Logo\r\n                        </div>\r\n                    </div>\r\n                    <div className='add-right'>\r\n                        <div className='add-column'>\r\n                            <Input name='name_ru' placeholder='Название (рус.)' value={newItem?.name_ru} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_tk' placeholder='Название (туркм.)' value={newItem?.name_tk} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_en' placeholder='Название (анг.)' value={newItem?.name_en} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-picture'>\r\n                            {newItem?.id && <img className='brand-image' src={newItem?.image} alt={newItem?.name_ru} />}\r\n                            <Upload\r\n                                customRequest={handleAddCustomRequest}\r\n                                listType=\"picture-card\"\r\n                                fileList={fileList}\r\n                                onPreview={handlePreview}\r\n                                onChange={handleChange}\r\n                            >\r\n                                {fileList.length == 0 && uploadButton}\r\n                            </Upload>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Вы уверены, что хотите удалить?\"\r\n                open={open}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                okButtonProps={{ danger: true }}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            />\r\n            <div className='page'>\r\n                <div className='page-header-content'>\r\n                    <h2>Категории</h2>\r\n                    <div className='add-button' onClick={showAddModal}>Добавлять</div>\r\n                </div>\r\n                <TableComponent active={selectedItem?.id} columns={columns} dataSource={dataSource} pagination={false} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Categories;"],"names":["_ref","dataSource","columns","pagination","active","loading","_jsx","Table","rowClassName","record","rowIndex","id","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","_useState","useState","_useState2","_slicedToArray","setDataSource","_useState3","_useState4","open","setOpen","_useState5","_useState6","confirmLoading","setConfirmLoading","_useState7","_useState8","selectedItem","setSelectedItem","_useState9","_useState10","setProgress","_useState11","_useState12","fileList","setFileList","_useState13","_useState14","addOpen","setAddOpen","_useState15","_useState16","setPreviewOpen","_useState17","_useState18","setPreviewImage","_useState19","_useState20","setPreviewTitle","_useState21","_useState22","newItem","setNewItem","useEffect","axiosInstance","then","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","_res$data","wrap","_context","prev","next","data","forEach","element","key","stop","_x","apply","arguments","catch","err","console","log","title","dataIndex","width","render","_","className","src","image","alt","name_ru","onClick","showModal","children","showAddModal","item","handleOk","_ref2","_callee2","newDataSource","_context2","filter","concat","message","t0","handleAddOk","_ref3","_callee3","formData","_fileList$","_fileList$2","_fileList$3","index","_context3","FormData","append","name_en","name_tk","length","URL","createObjectURL","originFileObj","name","sent","findIndex","previousState","a","_toConsumableArray","handleAddCustomRequest","_ref4","_callee4","options","onSuccess","onError","onProgress","_context4","headers","onUploadProgress","event","percent","Math","floor","loaded","total","setTimeout","_x2","handlePreview","_ref6","_callee5","_context5","preview","_x3","uploadButton","_jsxs","PlusOutlined","style","marginTop","handleAddChange","e","_objectSpread","_defineProperty","target","value","_Fragment","Modal","onOk","onCancel","cancelText","okText","okType","top","Input","placeholder","onChange","Upload","customRequest","listType","onPreview","_ref5","newFileList","okButtonProps","danger","TableComponent"],"sourceRoot":""}