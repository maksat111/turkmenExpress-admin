{"version":3,"file":"static/js/501.7907d24d.chunk.js","mappings":"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","sources":["components/TableComponent.js","config/axios.js","utils/getToken.js","pages/ClientType/ClientType.js"],"sourcesContent":["import { Table } from 'antd';\r\nimport React from 'react';\r\n\r\nfunction TableComponent({ dataSource, columns, pagination, active, loading }) {\r\n    return (\r\n        <Table\r\n            rowClassName={(record, rowIndex) => record.id == active && 'active-row'}\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={pagination}\r\n            loading={loading ? loading : false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TableComponent;","import axios from 'axios';\r\nimport { getToken } from '../utils/getToken';\r\n\r\nconst token = getToken();\r\nconst BASE_URL = 'https://turkmenexpress.com.tm/api/administrator/';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: BASE_URL,\r\n    timeout: 60000,\r\n    headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'Accept': \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n    }\r\n});\r\n\r\nconst loginPost = async (phone_number, password) => {\r\n    const res = await axios.post(`${BASE_URL}login/`, { phone_number, password });\r\n    return res;\r\n}\r\nexport { axiosInstance, loginPost } ","export const getToken = () => {\r\n    let data = JSON.parse(localStorage.getItem('turkmenExpress-admin'));\r\n    if (data) {\r\n        return data.access\r\n    } else {\r\n        return null\r\n    }\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { Modal } from 'antd';\r\nimport { Checkbox, message } from 'antd';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport TableComponent from '../../components/TableComponent';\r\nimport Input from 'antd/es/input/Input';\r\n\r\nfunction ClientType() {\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [addOpen, setAddOpen] = useState(false);\r\n    const [newItem, setNewItem] = useState({\r\n        name_ru: '',\r\n        name_en: '',\r\n        name_tk: '',\r\n    })\r\n\r\n\r\n    const showModal = (item) => {\r\n        setOpen(true);\r\n        setSelectedItem(item);\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            await axiosInstance.delete(`users/types/delete/${selectedItem.id}/`);\r\n            const newDataSource = dataSource.filter(element => element.id !== selectedItem.id);\r\n            setDataSource(newDataSource);\r\n            message.success('Успешно удалено')\r\n            setOpen(false);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('users/types/list/').then(res => {\r\n            res.data?.forEach(element => {\r\n                element.key = element.id\r\n            });\r\n            setDataSource(res?.data);\r\n        }).catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: '65px',\r\n            style: { alignItems: \"center\" }\r\n        },\r\n        {\r\n            title: 'Название (рус.)',\r\n            dataIndex: 'name_ru',\r\n            key: 'name_ru',\r\n        },\r\n        {\r\n            title: 'Название (туркм.)',\r\n            dataIndex: 'name_tk',\r\n            key: 'name_tk',\r\n        },\r\n        {\r\n            title: 'Навзание (анг.)',\r\n            dataIndex: 'name_en',\r\n            key: 'name_en',\r\n        },\r\n        {\r\n            title: 'Удалить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '110px',\r\n            render: (_, record) => (\r\n                <div className='delete-icon' onClick={() => showModal(record)}>\r\n                    Удалить\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Изменить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '120px',\r\n            render: (_, record) => (\r\n                <div className='update-icon' onClick={() => showAddModal(record)}>\r\n                    Изменить\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    //---------------------------------------------------ADD && UPDATE MODAL-------------------------------------------//\r\n    const showAddModal = (item) => {\r\n        // setSelectedItem(item);\r\n        item.id && setNewItem(item);\r\n        setAddOpen(true);\r\n    };\r\n\r\n    const handleAddOk = async () => {\r\n        setConfirmLoading(true);\r\n        const formData = new FormData();\r\n        const keys = Object.keys(newItem);\r\n        const values = Object.values(newItem);\r\n        keys.forEach((key, index) => {\r\n            formData.append(key, values[index]);\r\n        })\r\n        try {\r\n            if (newItem.id) {\r\n                const res = await axiosInstance.put(`users/types/update/${newItem.id}/`, formData);\r\n                const index = dataSource.findIndex(item => item.id == newItem.id);\r\n                setDataSource(previousState => {\r\n                    const a = previousState;\r\n                    a[index].name_ru = newItem.name_ru;\r\n                    a[index].name_en = newItem.name_en;\r\n                    a[index].name_tk = newItem.name_tk;\r\n                    return a;\r\n                })\r\n            } else {\r\n                const res = await axiosInstance.post('users/types/add/', formData);\r\n                res.data.key = res.data.id;\r\n                setDataSource([...dataSource, res.data]);\r\n            }\r\n            setNewItem(null);\r\n            setConfirmLoading(false);\r\n            message.success('Успешно')\r\n            setAddOpen(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleAddCancel = () => {\r\n        setNewItem(null);\r\n        setAddOpen(false);\r\n    };\r\n\r\n    const handleAddChange = (e) => {\r\n        setNewItem({ ...newItem, [e.target.name]: [e.target.value] });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Дополните детали\"\r\n                open={addOpen}\r\n                onOk={handleAddOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleAddCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                width={'600px'}\r\n                okType={'primary'}\r\n                style={{ top: '150px' }}\r\n            >\r\n                <div className='banner-add-container'>\r\n                    <div className='add-left'>\r\n                        <div className='add-column'>\r\n                            Название (рус.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Название (туркм.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Навзание (анг.):\r\n                        </div>\r\n                    </div>\r\n                    <div className='add-right'>\r\n                        <div className='add-column'>\r\n                            <Input name='name_ru' placeholder='Название (рус.)' value={newItem?.name_ru} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_tk' placeholder='Название (туркм.)' value={newItem?.name_tk} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_en' placeholder='Название (анг.)' value={newItem?.name_en} onChange={handleAddChange} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Вы уверены, что хотите удалить?\"\r\n                open={open}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                okButtonProps={{ danger: true }}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            />\r\n            <div className='page'>\r\n                <div className='page-header-content'>\r\n                    <h2>Типы покупателей</h2>\r\n                    <div className='add-button' onClick={showAddModal}>Добавлять</div>\r\n                </div>\r\n                <TableComponent dataSource={dataSource} columns={columns} pagination={false} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ClientType;"],"names":["_ref","dataSource","columns","pagination","active","loading","_jsx","Table","rowClassName","record","rowIndex","id","token","data","JSON","parse","localStorage","getItem","access","getToken","BASE_URL","axiosInstance","axios","baseURL","timeout","headers","concat","loginPost","_asyncToGenerator","_regeneratorRuntime","mark","_callee","phone_number","password","res","wrap","_context","prev","next","sent","abrupt","stop","_x","_x2","apply","arguments","_useState","useState","_useState2","_slicedToArray","setDataSource","_useState3","_useState4","open","setOpen","_useState5","_useState6","confirmLoading","setConfirmLoading","_useState7","_useState8","selectedItem","setSelectedItem","_useState9","_useState10","addOpen","setAddOpen","_useState11","name_ru","name_en","name_tk","_useState12","newItem","setNewItem","handleOk","newDataSource","filter","element","message","t0","console","log","useEffect","then","_res$data","forEach","key","catch","err","title","dataIndex","width","style","alignItems","render","_","className","onClick","item","children","showAddModal","handleAddOk","_ref2","_callee2","formData","keys","values","index","_res","_context2","FormData","Object","append","findIndex","previousState","a","_toConsumableArray","handleAddChange","e","_objectSpread","_defineProperty","target","name","value","_jsxs","_Fragment","Modal","onOk","onCancel","cancelText","okText","okType","top","Input","placeholder","onChange","okButtonProps","danger","TableComponent"],"sourceRoot":""}