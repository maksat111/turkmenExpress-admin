{"version":3,"file":"static/js/719.26506acd.chunk.js","mappings":"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","sources":["components/TableComponent.js","config/axios.js","utils/getToken.js","pages/SettingsList/SettingsList.js"],"sourcesContent":["import { Table } from 'antd';\r\nimport React from 'react';\r\n\r\nfunction TableComponent({ dataSource, columns, pagination, active, loading }) {\r\n    return (\r\n        <Table\r\n            rowClassName={(record, rowIndex) => record.id == active && 'active-row'}\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={pagination}\r\n            loading={loading ? loading : false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TableComponent;","import axios from 'axios';\r\nimport { getToken } from '../utils/getToken';\r\n\r\nconst token = getToken();\r\nconst BASE_URL = 'https://turkmenexpress.com.tm/api/administrator/';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: BASE_URL,\r\n    timeout: 60000,\r\n    headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'Accept': \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n    }\r\n});\r\n\r\nconst loginPost = async (phone_number, password) => {\r\n    const res = await axios.post(`${BASE_URL}login/`, { phone_number, password });\r\n    return res;\r\n}\r\nexport { axiosInstance, loginPost } ","export const getToken = () => {\r\n    let data = JSON.parse(localStorage.getItem('turkmenExpress-admin'));\r\n    if (data) {\r\n        return data.access\r\n    } else {\r\n        return null\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport TableComponent from '../../components/TableComponent';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport { Modal, message, Upload, Checkbox, Select } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport './SettingsList.css';\r\nimport Input from 'antd/es/input/Input';\r\n\r\nfunction SettingsList() {\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [total, setTotal] = useState(null);\r\n    const [addOpen, setAddOpen] = useState(false);\r\n    const [selectOptions, setSelectOptions] = useState(null);\r\n    const [selectedGroupOption, setSelectedGroupOption] = useState([])\r\n    const [newItem, setNewItem] = useState(null);\r\n    const [pageSize, setPageSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('options/list').then(async (res) => {\r\n            let a = [];\r\n            let b = [];\r\n            setTotal(res.data.count);\r\n            setPageSize(res.data.results.length);\r\n            res.data?.results.forEach(element => {\r\n                a.push({\r\n                    id: element.id,\r\n                    key: element.id,\r\n                    name_ru: element.name_ru,\r\n                    name_en: element.name_en,\r\n                    name_tk: element.name_tk,\r\n                    option_group: element.option_group.name_ru\r\n                })\r\n            });\r\n            setDataSource(a);\r\n            const groupOptions = await axiosInstance.get('options-group/list/');\r\n            groupOptions.data?.forEach(item => {\r\n                b.push({\r\n                    label: item.name_ru,\r\n                    value: item.name_ru,\r\n                    id: item.id\r\n                })\r\n            });\r\n            setSelectOptions(b);\r\n        }).catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: '65px',\r\n        },\r\n        {\r\n            title: 'Название (рус.)',\r\n            dataIndex: 'name_ru',\r\n            key: 'name_ru',\r\n        },\r\n        {\r\n            title: 'Название (туркм.)',\r\n            dataIndex: 'name_tk',\r\n            key: 'name_tk',\r\n        },\r\n        {\r\n            title: 'Навзание (анг.)',\r\n            dataIndex: 'name_en',\r\n            key: 'name_en',\r\n        },\r\n        {\r\n            title: 'Группа опций',\r\n            dataIndex: 'option_group',\r\n            key: 'option_group',\r\n        },\r\n        {\r\n            title: 'Удалить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '110px',\r\n            render: (_, record) => (\r\n                <div className='delete-icon' onClick={() => showModal(record)}>\r\n                    Удалить\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Изменить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '120px',\r\n            render: (_, record) => (\r\n                <div className='update-icon' onClick={() => showAddModal(record)} >\r\n                    Изменить\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const showModal = (item) => {\r\n        setSelectedItem(item);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            await axiosInstance.delete(`options/delete/${selectedItem.id}/`);\r\n            const newDataSource = dataSource.filter(element => element.id !== selectedItem.id);\r\n            setDataSource(newDataSource);\r\n            message.success('Успешно удалено')\r\n            setOpen(false);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //-----------------------------------------Add Modal-------------------------------------------------//\r\n    const showAddModal = (item) => {\r\n        if (item.id) {\r\n            setSelectedItem(item);\r\n            const filtered = selectOptions.filter(groupOption => groupOption.name_ru == item.option_group);\r\n            setSelectedGroupOption([{ id: filtered[0]?.id, label: item.option_group, value: item.option_group }])\r\n            setNewItem(item);\r\n        }\r\n        setAddOpen(true);\r\n    };\r\n\r\n    const handleAddOk = async () => {\r\n        try {\r\n            if (newItem.id) {\r\n                const formData = new FormData();\r\n                formData.append(\"name_ru\", newItem.name_ru);\r\n                formData.append(\"name_en\", newItem.name_en);\r\n                formData.append(\"name_tk\", newItem.name_tk);\r\n                formData.append('option_group', selectedGroupOption[0].id);\r\n                const res = await axiosInstance.patch(`options/update/${newItem.id}/`, formData);\r\n                const index = dataSource.findIndex(item => item.id == newItem.id);\r\n                setDataSource(previousState => {\r\n                    const a = previousState;\r\n                    a[index].name_ru = newItem.name_ru;\r\n                    a[index].name_en = newItem.name_en;\r\n                    a[index].name_tk = newItem.name_tk;\r\n                    a[index].option_group = selectedGroupOption[0].value;\r\n                    return a;\r\n                })\r\n            } else {\r\n                let a = [];\r\n                setConfirmLoading(true);\r\n                selectedGroupOption.forEach(async groupOption => {\r\n                    const formData = new FormData();\r\n                    formData.append(\"name_ru\", newItem.name_ru);\r\n                    formData.append(\"name_en\", newItem.name_en);\r\n                    formData.append(\"name_tk\", newItem.name_tk);\r\n                    formData.append('option_group', groupOption.id);\r\n                    const res = await axiosInstance.post(`options/add/`, formData);\r\n                    res.data.key = res.data.id;\r\n                    a.push(res.data);\r\n                })\r\n                setDataSource([...dataSource, ...a]);\r\n            }\r\n            setSelectedGroupOption([]);\r\n            setNewItem(null);\r\n            message.success('Успешно добавлено');\r\n            setConfirmLoading(false);\r\n            setAddOpen(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleAddCancel = () => {\r\n        setSelectedGroupOption([]);\r\n        setNewItem(null);\r\n        setAddOpen(false);\r\n    };\r\n\r\n    const handleAddChange = (e) => {\r\n        setNewItem({ ...newItem, [e.target.name]: [e.target.value] });\r\n    }\r\n\r\n    //-------------------------------------------------------pagination -----------------------------------------//\r\n    const onPaginationChange = async (page) => {\r\n        let a = [];\r\n        const res = await axiosInstance.get(`options/list?page=${page}`);\r\n        res.data.results?.forEach(element => {\r\n            a.push({\r\n                id: element.id,\r\n                key: element.id,\r\n                name_ru: element.name_ru,\r\n                name_en: element.name_en,\r\n                name_tk: element.name_tk,\r\n                option_group: element.option_group.name_ru\r\n            })\r\n        });\r\n        setDataSource(a);\r\n    }\r\n\r\n    const handleUpdateSelectChange = (e) => {\r\n        let a = [];\r\n        selectOptions.forEach(item => {\r\n            e.forEach(selected => item.value == selected && a.push({ id: item.id, label: selected, value: selected }));\r\n        });\r\n        setSelectedGroupOption(a);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Дополните детали для добавления\"\r\n                open={addOpen}\r\n                onOk={handleAddOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleAddCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                width={'600px'}\r\n                okType={'primary'}\r\n                style={{ top: '100px' }}\r\n            >\r\n                <div className='banner-add-container'>\r\n                    <div className='add-left'>\r\n                        <div className='add-column'>\r\n                            Название (рус.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Название (туркм.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Навзание (анг.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Группа опций:\r\n                        </div>\r\n                    </div>\r\n                    <div className='add-right'>\r\n                        <div className='add-column'>\r\n                            <Input name='name_ru' placeholder='Название (рус.)' value={newItem?.name_ru} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_tk' placeholder='Название (туркм.)' value={newItem?.name_tk} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_en' placeholder='Название (анг.)' value={newItem?.name_en} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Select\r\n                                value={selectedGroupOption}\r\n                                mode=\"multiple\"\r\n                                allowClear\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                                placeholder=\"Выберите группа опцию\"\r\n                                onChange={(e) => handleUpdateSelectChange(e)}\r\n                                options={selectOptions}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Вы уверены, что хотите удалить?\"\r\n                open={open}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                okButtonProps={{ danger: true }}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            />\r\n            <div className='page'>\r\n                <div className='page-header-content'>\r\n                    <h2>Список опций</h2>\r\n                    <div className='add-button' onClick={showAddModal}>Добавлять</div>\r\n                </div>\r\n                <TableComponent\r\n                    active={selectedItem?.id}\r\n                    columns={columns}\r\n                    dataSource={dataSource}\r\n                    pagination={{ onChange: onPaginationChange, total: total, pageSize: pageSize, showQuickJumper: true }}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SettingsList;"],"names":["_ref","dataSource","columns","pagination","active","loading","_jsx","Table","rowClassName","record","rowIndex","id","token","data","JSON","parse","localStorage","getItem","access","getToken","BASE_URL","axiosInstance","axios","baseURL","timeout","headers","concat","loginPost","_asyncToGenerator","_regeneratorRuntime","mark","_callee","phone_number","password","res","wrap","_context","prev","next","sent","abrupt","stop","_x","_x2","apply","arguments","_useState","useState","_useState2","_slicedToArray","setDataSource","_useState3","_useState4","open","setOpen","_useState5","_useState6","confirmLoading","setConfirmLoading","_useState7","_useState8","selectedItem","setSelectedItem","_useState9","_useState10","total","setTotal","_useState11","_useState12","addOpen","setAddOpen","_useState13","_useState14","selectOptions","setSelectOptions","_useState15","_useState16","selectedGroupOption","setSelectedGroupOption","_useState17","_useState18","newItem","setNewItem","_useState19","_useState20","pageSize","setPageSize","useEffect","then","_res$data","_groupOptions$data","a","b","groupOptions","count","results","length","forEach","element","push","key","name_ru","name_en","name_tk","option_group","item","label","value","catch","err","console","log","title","dataIndex","width","render","_","className","onClick","showModal","children","showAddModal","handleOk","_ref2","_callee2","newDataSource","_context2","filter","message","t0","_filtered$","filtered","groupOption","handleAddOk","_ref3","_callee4","formData","index","_context4","FormData","append","findIndex","previousState","_ref4","_callee3","_context3","_toConsumableArray","handleAddChange","e","_objectSpread","_defineProperty","target","name","onPaginationChange","_ref5","_callee5","page","_res$data$results","_context5","_x3","_jsxs","_Fragment","Modal","onOk","onCancel","cancelText","okText","okType","style","top","Input","placeholder","onChange","Select","mode","allowClear","selected","handleUpdateSelectChange","options","okButtonProps","danger","TableComponent","showQuickJumper"],"sourceRoot":""}