{"version":3,"file":"static/js/270.fd7c867d.chunk.js","mappings":"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","sources":["components/TableComponent.js","config/axios.js","utils/getToken.js","pages/Categories/Categories.js"],"sourcesContent":["import { Table } from 'antd';\r\nimport React from 'react';\r\n\r\nfunction TableComponent({ dataSource, columns, pagination, active, loading }) {\r\n    return (\r\n        <Table\r\n            rowClassName={(record, rowIndex) => record.id == active && 'active-row'}\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={pagination}\r\n            loading={loading ? loading : false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TableComponent;","import axios from 'axios';\r\nimport { getToken } from '../utils/getToken';\r\n\r\nconst token = getToken();\r\nconst BASE_URL = 'https://turkmenexpress.com.tm/api/administrator/';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: BASE_URL,\r\n    timeout: 60000,\r\n    headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'Accept': \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n    }\r\n});\r\n\r\nconst loginPost = async (phone_number, password) => {\r\n    const res = await axios.post(`${BASE_URL}login/`, { phone_number, password });\r\n    return res;\r\n}\r\nexport { axiosInstance, loginPost } ","export const getToken = () => {\r\n    let data = JSON.parse(localStorage.getItem('turkmenExpress-admin'));\r\n    if (data) {\r\n        return data.access\r\n    } else {\r\n        return null\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport TableComponent from '../../components/TableComponent';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport { Modal, message, Upload, Checkbox, Select } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport './Categories.css';\r\nimport Input from 'antd/es/input/Input';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n\r\nfunction Categories() {\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [addOpen, setAddOpen] = useState(false);\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    const [newItem, setNewItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('categories/list').then(async (res) => {\r\n            res.data?.forEach(element => {\r\n                element.key = element.id\r\n            });\r\n            setDataSource(res?.data);\r\n        }).catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: '65px',\r\n        },\r\n        {\r\n            title: 'Название (рус.)',\r\n            dataIndex: 'name_ru',\r\n            key: 'name_ru',\r\n        },\r\n        {\r\n            title: 'Название (туркм.)',\r\n            dataIndex: 'name_tk',\r\n            key: 'name_tk',\r\n        },\r\n        {\r\n            title: 'Навзание (анг.)',\r\n            dataIndex: 'name_en',\r\n            key: 'name_en',\r\n        },\r\n        {\r\n            title: 'Logo',\r\n            dataIndex: 'image',\r\n            key: 'image',\r\n            render: (_, record) => (\r\n                <img className='brand-image' src={record.image} alt={record.name_ru} />\r\n            ),\r\n        },\r\n        {\r\n            title: 'Удалить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '110px',\r\n            render: (_, record) => (\r\n                <div className='delete-icon' onClick={() => showModal(record)}>\r\n                    Удалить\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Изменить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '120px',\r\n            render: (_, record) => (\r\n                <div className='update-icon' onClick={() => showAddModal(record)} >\r\n                    Изменить\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const showModal = (item) => {\r\n        setSelectedItem(item);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            const newDataSource = dataSource.filter(element => element.id !== selectedItem.id);\r\n            await axiosInstance.delete(`categoris/delete/${selectedItem.id}/`);\r\n            setDataSource(newDataSource);\r\n            message.success('Успешно удалено')\r\n            setOpen(false);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //-----------------------------------------Add Modal-------------------------------------------------//\r\n    const showAddModal = (item) => {\r\n        if (item.id) {\r\n            setSelectedItem(item);\r\n            setNewItem(item);\r\n        }\r\n        setAddOpen(true);\r\n    };\r\n\r\n    const handleAddOk = async () => {\r\n        setConfirmLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('name_ru', newItem.name_ru);\r\n        formData.append('name_en', newItem.name_en);\r\n        formData.append('name_tk', newItem.name_tk);\r\n        if (fileList.length !== 0) {\r\n            newItem.image = URL.createObjectURL(fileList[0]?.originFileObj);\r\n            formData.append(\"image\", fileList[0]?.originFileObj, fileList[0]?.originFileObj.name);\r\n        }\r\n        try {\r\n            if (newItem.id) {\r\n                const res = await axiosInstance.patch(`categoris/update/${newItem.id}/`, formData);\r\n                const index = dataSource.findIndex(item => item.id == newItem.id);\r\n                setDataSource(previousState => {\r\n                    const a = previousState;\r\n                    a[index].name_ru = newItem.name_ru;\r\n                    a[index].name_en = newItem.name_en;\r\n                    a[index].name_tk = newItem.name_tk;\r\n                    a[index].image = newItem.image;\r\n                    return a;\r\n                })\r\n            } else {\r\n                const res = await axiosInstance.post('categories/add/', formData);\r\n                setDataSource([...dataSource, newItem])\r\n            }\r\n            setNewItem(null);\r\n            message.success('Успешно!')\r\n            setAddOpen(false);\r\n            setFileList([]);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleAddCancel = () => {\r\n        setFileList([]);\r\n        setNewItem(null);\r\n        setAddOpen(false);\r\n    };\r\n\r\n    const handleAddCustomRequest = async (options) => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const config = {\r\n            headers: { \"content-type\": \"multipart/form-data\" },\r\n            onUploadProgress: event => {\r\n                const percent = Math.floor((event.loaded / event.total) * 100);\r\n                setProgress(percent);\r\n                if (percent === 100) {\r\n                    setTimeout(() => setProgress(0), 1000);\r\n                }\r\n                onProgress({ percent: (event.loaded / event.total) * 100 });\r\n            }\r\n        };\r\n        try {\r\n            onSuccess(\"Ok\");\r\n        } catch (err) {\r\n            onError('Upload error');\r\n        }\r\n    };\r\n\r\n    //-----------------------------------------upload--------------------------------------------//\r\n    const handleChange = ({ fileList: newFileList }) => setFileList(newFileList);\r\n\r\n    const handlePreviewCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        file.preview = await getBase64(file.originFileObj);\r\n        setPreviewImage(file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name);\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div\r\n                style={{\r\n                    marginTop: 8,\r\n                }}\r\n            >\r\n                Upload\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    const handleAddChange = (e) => {\r\n        setNewItem({ ...newItem, [e.target.name]: [e.target.value] });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Дополните детали для добавления\"\r\n                open={addOpen}\r\n                onOk={handleAddOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleAddCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                width={'600px'}\r\n                okType={'primary'}\r\n                style={{ top: '100px' }}\r\n            >\r\n                <div className='banner-add-container'>\r\n                    <div className='add-left'>\r\n                        <div className='add-column'>\r\n                            Название (рус.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Название (туркм.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Навзание (анг.):\r\n                        </div>\r\n                        <div className='add-picture'>\r\n                            Logo\r\n                        </div>\r\n                    </div>\r\n                    <div className='add-right'>\r\n                        <div className='add-column'>\r\n                            <Input name='name_ru' placeholder='Название (рус.)' value={newItem?.name_ru} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_tk' placeholder='Название (туркм.)' value={newItem?.name_tk} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_en' placeholder='Название (анг.)' value={newItem?.name_en} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-picture'>\r\n                            {newItem?.id && <img className='brand-image' src={newItem?.image} alt={newItem?.name_ru} />}\r\n                            <Upload\r\n                                customRequest={handleAddCustomRequest}\r\n                                listType=\"picture-card\"\r\n                                fileList={fileList}\r\n                                onPreview={handlePreview}\r\n                                onChange={handleChange}\r\n                            >\r\n                                {fileList.length == 0 && uploadButton}\r\n                            </Upload>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Вы уверены, что хотите удалить?\"\r\n                open={open}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                okButtonProps={{ danger: true }}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            />\r\n            <div className='page'>\r\n                <div className='page-header-content'>\r\n                    <h2>Категории</h2>\r\n                    <div className='add-button' onClick={showAddModal}>Добавлять</div>\r\n                </div>\r\n                <TableComponent active={selectedItem?.id} columns={columns} dataSource={dataSource} pagination={false} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Categories;"],"names":["_ref","dataSource","columns","pagination","active","loading","_jsx","Table","rowClassName","record","rowIndex","id","token","data","JSON","parse","localStorage","getItem","access","getToken","BASE_URL","axiosInstance","axios","baseURL","timeout","headers","concat","loginPost","_asyncToGenerator","_regeneratorRuntime","mark","_callee","phone_number","password","res","wrap","_context","prev","next","sent","abrupt","stop","_x","_x2","apply","arguments","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","_useState","useState","_useState2","_slicedToArray","setDataSource","_useState3","_useState4","open","setOpen","_useState5","_useState6","confirmLoading","setConfirmLoading","_useState7","_useState8","selectedItem","setSelectedItem","_useState9","_useState10","setProgress","_useState11","_useState12","fileList","setFileList","_useState13","_useState14","addOpen","setAddOpen","_useState15","_useState16","setPreviewOpen","_useState17","_useState18","setPreviewImage","_useState19","_useState20","setPreviewTitle","_useState21","_useState22","newItem","setNewItem","useEffect","then","_res$data","forEach","element","key","catch","err","console","log","title","dataIndex","width","render","_","className","src","image","alt","name_ru","onClick","showModal","children","showAddModal","item","handleOk","_ref2","_callee2","newDataSource","_context2","filter","message","t0","handleAddOk","_ref3","_callee3","formData","_fileList$","_fileList$2","_fileList$3","index","_context3","FormData","append","name_en","name_tk","length","URL","createObjectURL","originFileObj","name","findIndex","previousState","a","_toConsumableArray","handleAddCustomRequest","_ref4","_callee4","options","onSuccess","onError","onProgress","_context4","onUploadProgress","event","percent","Math","floor","loaded","total","setTimeout","handlePreview","_ref6","_callee5","_context5","preview","_x3","uploadButton","_jsxs","PlusOutlined","style","marginTop","handleAddChange","e","_objectSpread","_defineProperty","target","value","_Fragment","Modal","onOk","onCancel","cancelText","okText","okType","top","Input","placeholder","onChange","Upload","customRequest","listType","onPreview","_ref5","newFileList","okButtonProps","danger","TableComponent"],"sourceRoot":""}