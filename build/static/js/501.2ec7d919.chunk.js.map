{"version":3,"file":"static/js/501.2ec7d919.chunk.js","mappings":"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","sources":["components/TableComponent.js","pages/ClientType/ClientType.js"],"sourcesContent":["import { Table } from 'antd';\r\nimport React from 'react';\r\n\r\nfunction TableComponent({ dataSource, columns, pagination, active, loading }) {\r\n    return (\r\n        <Table\r\n            rowClassName={(record, rowIndex) => record.id == active && 'active-row'}\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={pagination}\r\n            loading={loading ? loading : false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TableComponent;","import { React, useEffect, useState } from 'react';\r\nimport { Modal } from 'antd';\r\nimport { Checkbox, message } from 'antd';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport TableComponent from '../../components/TableComponent';\r\nimport Input from 'antd/es/input/Input';\r\n\r\nfunction ClientType() {\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [addOpen, setAddOpen] = useState(false);\r\n    const [newItem, setNewItem] = useState({\r\n        name_ru: '',\r\n        name_en: '',\r\n        name_tk: '',\r\n    })\r\n\r\n\r\n    const showModal = (item) => {\r\n        setOpen(true);\r\n        setSelectedItem(item);\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            await axiosInstance.delete(`users/types/delete/${selectedItem.id}/`);\r\n            const newDataSource = dataSource.filter(element => element.id !== selectedItem.id);\r\n            setDataSource(newDataSource);\r\n            message.success('Успешно удалено')\r\n            setOpen(false);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('users/types/list/').then(res => {\r\n            res.data?.forEach(element => {\r\n                element.key = element.id\r\n            });\r\n            setDataSource(res?.data);\r\n        }).catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: '65px',\r\n            style: { alignItems: \"center\" }\r\n        },\r\n        {\r\n            title: 'Название (рус.)',\r\n            dataIndex: 'name_ru',\r\n            key: 'name_ru',\r\n        },\r\n        {\r\n            title: 'Название (туркм.)',\r\n            dataIndex: 'name_tk',\r\n            key: 'name_tk',\r\n        },\r\n        {\r\n            title: 'Навзание (анг.)',\r\n            dataIndex: 'name_en',\r\n            key: 'name_en',\r\n        },\r\n        {\r\n            title: 'Удалить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '110px',\r\n            render: (_, record) => (\r\n                <div className='delete-icon' onClick={() => showModal(record)}>\r\n                    Удалить\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Изменить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '120px',\r\n            render: (_, record) => (\r\n                <div className='update-icon' onClick={() => showAddModal(record)}>\r\n                    Изменить\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    //---------------------------------------------------ADD && UPDATE MODAL-------------------------------------------//\r\n    const showAddModal = (item) => {\r\n        // setSelectedItem(item);\r\n        item.id && setNewItem(item);\r\n        setAddOpen(true);\r\n    };\r\n\r\n    const handleAddOk = async () => {\r\n        setConfirmLoading(true);\r\n        const formData = new FormData();\r\n        const keys = Object.keys(newItem);\r\n        const values = Object.values(newItem);\r\n        keys.forEach((key, index) => {\r\n            formData.append(key, values[index]);\r\n        })\r\n        try {\r\n            if (newItem.id) {\r\n                const res = await axiosInstance.put(`users/types/update/${newItem.id}/`, formData);\r\n                const index = dataSource.findIndex(item => item.id == newItem.id);\r\n                setDataSource(previousState => {\r\n                    const a = previousState;\r\n                    a[index].name_ru = newItem.name_ru;\r\n                    a[index].name_en = newItem.name_en;\r\n                    a[index].name_tk = newItem.name_tk;\r\n                    return a;\r\n                })\r\n            } else {\r\n                const res = await axiosInstance.post('users/types/add/', formData);\r\n                res.data.key = res.data.id;\r\n                setDataSource([...dataSource, res.data]);\r\n            }\r\n            setNewItem(null);\r\n            setConfirmLoading(false);\r\n            message.success('Успешно')\r\n            setAddOpen(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleAddCancel = () => {\r\n        setNewItem(null);\r\n        setAddOpen(false);\r\n    };\r\n\r\n    const handleAddChange = (e) => {\r\n        setNewItem({ ...newItem, [e.target.name]: [e.target.value] });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Дополните детали\"\r\n                open={addOpen}\r\n                onOk={handleAddOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleAddCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                width={'600px'}\r\n                okType={'primary'}\r\n                style={{ top: '150px' }}\r\n            >\r\n                <div className='banner-add-container'>\r\n                    <div className='add-left'>\r\n                        <div className='add-column'>\r\n                            Название (рус.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Название (туркм.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Навзание (анг.):\r\n                        </div>\r\n                    </div>\r\n                    <div className='add-right'>\r\n                        <div className='add-column'>\r\n                            <Input name='name_ru' placeholder='Название (рус.)' value={newItem?.name_ru} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_tk' placeholder='Название (туркм.)' value={newItem?.name_tk} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_en' placeholder='Название (анг.)' value={newItem?.name_en} onChange={handleAddChange} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Вы уверены, что хотите удалить?\"\r\n                open={open}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                okButtonProps={{ danger: true }}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            />\r\n            <div className='page'>\r\n                <div className='page-header-content'>\r\n                    <h2>Типы покупателей</h2>\r\n                    <div className='add-button' onClick={showAddModal}>Добавлять</div>\r\n                </div>\r\n                <TableComponent dataSource={dataSource} columns={columns} pagination={false} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ClientType;"],"names":["_ref","dataSource","columns","pagination","active","loading","_jsx","Table","rowClassName","record","rowIndex","id","_useState","useState","_useState2","_slicedToArray","setDataSource","_useState3","_useState4","open","setOpen","_useState5","_useState6","confirmLoading","setConfirmLoading","_useState7","_useState8","selectedItem","setSelectedItem","_useState9","_useState10","addOpen","setAddOpen","_useState11","name_ru","name_en","name_tk","_useState12","newItem","setNewItem","handleOk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newDataSource","wrap","_context","prev","next","axiosInstance","concat","filter","element","message","t0","console","log","stop","apply","arguments","useEffect","then","res","_res$data","data","forEach","key","catch","err","title","dataIndex","width","style","alignItems","render","_","className","onClick","item","children","showAddModal","handleAddOk","_ref2","_callee2","formData","keys","values","index","_res","_context2","FormData","Object","append","sent","findIndex","previousState","a","_toConsumableArray","handleAddChange","e","_objectSpread","_defineProperty","target","name","value","_jsxs","_Fragment","Modal","onOk","onCancel","cancelText","okText","okType","top","Input","placeholder","onChange","okButtonProps","danger","TableComponent"],"sourceRoot":""}