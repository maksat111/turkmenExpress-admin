{"version":3,"file":"static/js/138.ae52ad4b.chunk.js","mappings":"gKAeA,IAZA,SAAuBA,GAAwD,IAArDC,EAAUD,EAAVC,WAAYC,EAAOF,EAAPE,QAASC,EAAUH,EAAVG,WAAYC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC/D,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,aAAc,SAACC,EAAQC,GAAQ,OAAKD,EAAOE,IAAMP,GAAU,YAAY,EACvEH,WAAYA,EACZC,QAASA,EACTC,WAAYA,EACZE,QAASA,IAAoB,GAGzC,C,iKCwMA,UA9MA,WACI,IAAAO,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCX,EAAUa,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwBJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4CR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAAwCZ,EAAAA,EAAAA,UAAS,MAAKa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA8BhB,EAAAA,EAAAA,WAAS,GAAMiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA8BpB,EAAAA,EAAAA,UAAS,MAAKqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAOpBG,EAAQ,eAAArC,GAAAsC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEe,OAFfF,EAAAC,KAAA,EAETrB,GAAkB,GAAMoB,EAAAE,KAAA,EAClBC,EAAAA,EAAAA,OAAqB,kBAADC,OAAmBrB,EAAahB,KAAM,KAAD,EACzD+B,EAAgBzC,EAAWgD,QAAO,SAAAC,GAAO,OAAIA,EAAQvC,KAAOgB,EAAahB,EAAE,IACjFK,EAAc0B,GACdS,EAAAA,GAAAA,QAAgB,yFAChB/B,GAAQ,GACRI,GAAkB,GAAOoB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEzBpB,GAAkB,GAClB2B,EAAAA,GAAAA,MAAc,kQACdE,QAAQC,IAAGV,EAAAQ,IAAK,yBAAAR,EAAAW,OAAA,GAAAd,EAAA,mBAEvB,kBAda,OAAAzC,EAAAwD,MAAA,KAAAC,UAAA,MAoBdC,EAAAA,EAAAA,YAAU,WACNX,EAAAA,EAAAA,IAAkB,gBAAgBY,MAAK,SAAAC,GAAQ,IAADC,EAClC,QAARA,EAAAD,EAAIE,YAAI,IAAAD,GAARA,EAAUE,SAAQ,SAAAb,GACdA,EAAQc,IAAMd,EAAQvC,EAC1B,IACAK,EAAiB,OAAH4C,QAAG,IAAHA,OAAG,EAAHA,EAAKE,KACvB,IAAGG,OAAM,SAAAC,GAAG,OAAIb,QAAQC,IAAIY,EAAI,GACpC,GAAG,IAEH,IAAMhE,EAAU,CACZ,CACIiE,MAAO,KACPC,UAAW,KACXJ,IAAK,KACLK,MAAO,OACPC,MAAO,CAAEC,WAAY,WAEzB,CACIJ,MAAO,yEACPC,UAAW,UACXJ,IAAK,WAET,CACIG,MAAO,qFACPC,UAAW,UACXJ,IAAK,WAET,CACIG,MAAO,yEACPC,UAAW,UACXJ,IAAK,WAET,CACIG,MAAO,6CACPC,UAAW,SACXJ,IAAK,SACLK,MAAO,QACPG,OAAQ,SAACC,EAAGhE,GAAM,OACdH,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,cAAcC,QAAS,kBA/D/BC,EA+D+CnE,EA9D9DW,GAAQ,QACRQ,EAAgBgD,GAFF,IAACA,CA+DsD,EAACC,SAAC,8CAEzD,GAGd,CACIV,MAAO,mDACPC,UAAW,SACXJ,IAAK,SACLK,MAAO,QACPG,OAAQ,SAACC,EAAGhE,GAAM,OACdH,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,cAAcC,QAAS,kBAAMG,EAAarE,EAAO,EAACoE,SAAC,oDAE5D,IAMZC,EAAe,SAACF,GACdA,EAAKjE,KACLyB,EAAWwC,GACXhD,EAAgBgD,IAEpB5C,GAAW,EACf,EAEM+C,EAAW,eAAAC,GAAA1C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhD,EAAAA,EAAAA,KAAAI,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAOd,GANFtB,GAAkB,GACZ0D,EAAW,IAAIO,SACfN,EAAOO,OAAOP,KAAKhD,GACnBiD,EAASM,OAAON,OAAOjD,GAC7BgD,EAAKpB,SAAQ,SAACC,EAAKqB,GACfH,EAASS,OAAO3B,EAAKoB,EAAOC,GAChC,IAAEG,EAAA3C,KAAA,GAEMV,EAAQxB,GAAG,CAAD6E,EAAA1C,KAAA,gBAAA0C,EAAA1C,KAAA,EACQC,EAAAA,EAAAA,IAAkB,kBAADC,OAAmBb,EAAQxB,GAAE,KAAKuE,GAAU,KAAD,EAArEM,EAAAI,KACHP,EAAQpF,EAAW4F,WAAU,SAAAjB,GAAI,OAAIA,EAAKjE,IAAMwB,EAAQxB,EAAE,IAChEK,GAAc,SAAA8E,GACV,IAAMC,EAAID,EAIV,OAHAC,EAAEV,GAAOW,QAAU7D,EAAQ6D,QAC3BD,EAAEV,GAAOY,QAAU9D,EAAQ8D,QAC3BF,EAAEV,GAAOa,QAAU/D,EAAQ+D,QACpBH,CACX,IAAEP,EAAA1C,KAAA,wBAAA0C,EAAA1C,KAAA,GAEgBC,EAAAA,EAAAA,KAAmB,eAAgBmC,GAAU,KAAD,GAAxDtB,EAAG4B,EAAAI,KACTzD,EAAQxB,GAAa,QAAX2E,EAAG1B,EAAIE,YAAI,IAAAwB,OAAA,EAARA,EAAU3E,GACvBK,EAAc,GAADgC,QAAAmD,EAAAA,EAAAA,GAAKlG,GAAU,CAAEkC,KAAS,QAE3CC,EAAW,MACXZ,GAAkB,GAClB2B,EAAAA,GAAAA,QAAgB,8CAChBnB,GAAW,GAAOwD,EAAA1C,KAAA,iBAAA0C,EAAA3C,KAAA,GAAA2C,EAAApC,GAAAoC,EAAA,SAElBhE,GAAkB,GAClB2B,EAAAA,GAAAA,MAAc,kQACdE,QAAQC,IAAGkC,EAAApC,IAAK,yBAAAoC,EAAAjC,OAAA,GAAA0B,EAAA,mBAEvB,kBAjCgB,OAAAD,EAAAxB,MAAA,KAAAC,UAAA,KAwCX2C,EAAkB,SAACC,GACrBjE,GAAUkE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAInE,GAAO,IAAAoE,EAAAA,EAAAA,GAAA,GAAGF,EAAEG,OAAOC,KAAO,CAACJ,EAAEG,OAAOE,SACxD,EAEA,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA/B,SAAA,EACIvE,EAAAA,EAAAA,KAACuG,EAAAA,EAAK,CACF1C,MAAM,8FACNhD,KAAMY,EACN+E,KAAM/B,EACNxD,eAAgBA,EAChBwF,SAhBY,WACpB3E,EAAW,MACXJ,GAAW,EACf,EAcYgF,WAAY,uCACZC,OAAQ,eACR5C,MAAO,QACP6C,OAAQ,UACR5C,MAAO,CAAE6C,IAAK,SAAUtC,UAExB8B,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,uBAAsBG,SAAA,EACjC8B,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,WAAUG,SAAA,EACrBvE,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,aAAYG,SAAC,6EAG5BvE,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,aAAYG,SAAC,yFAG5BvE,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,aAAYG,SAAC,gFAIhC8B,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,YAAWG,SAAA,EACtBvE,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,aAAYG,UACvBvE,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CAACX,KAAK,UAAUY,YAAY,yEAAkBX,MAAc,OAAPvE,QAAO,IAAPA,OAAO,EAAPA,EAAS6D,QAASsB,SAAUlB,OAE3F9F,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,aAAYG,UACvBvE,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CAACX,KAAK,UAAUY,YAAY,qFAAoBX,MAAc,OAAPvE,QAAO,IAAPA,OAAO,EAAPA,EAAS+D,QAASoB,SAAUlB,OAE7F9F,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,aAAYG,UACvBvE,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CAACX,KAAK,UAAUY,YAAY,yEAAkBX,MAAc,OAAPvE,QAAO,IAAPA,OAAO,EAAPA,EAAS8D,QAASqB,SAAUlB,eAKvG9F,EAAAA,EAAAA,KAACuG,EAAAA,EAAK,CACF1C,MAAM,+JACNhD,KAAMA,EACN2F,KAAMzE,EACNd,eAAgBA,EAChBwF,SA7JS,WACjB3F,GAAQ,EACZ,EA4JY4F,WAAY,uCACZC,OAAQ,eACRC,OAAQ,UACRK,cAAe,CAAEC,QAAQ,GACzBlD,MAAO,CACH6C,IAAK,YAGbR,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,OAAMG,SAAA,EACjB8B,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,sBAAqBG,SAAA,EAChCvE,EAAAA,EAAAA,KAAA,MAAAuE,SAAI,gDACJvE,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,aAAaC,QAASG,EAAaD,SAAC,+DAEvDvE,EAAAA,EAAAA,KAACmH,EAAAA,EAAc,CAACxH,WAAYA,EAAYC,QAASA,EAASC,YAAY,EAAOC,OAAoB,OAAZuB,QAAY,IAAZA,OAAY,EAAZA,EAAchB,UAInH,C","sources":["components/TableComponent.js","pages/Regions/Regions.js"],"sourcesContent":["import { Table } from 'antd';\r\nimport React from 'react';\r\n\r\nfunction TableComponent({ dataSource, columns, pagination, active, loading }) {\r\n    return (\r\n        <Table\r\n            rowClassName={(record, rowIndex) => record.id == active && 'active-row'}\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={pagination}\r\n            loading={loading ? loading : false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TableComponent;","import { React, useEffect, useState } from 'react';\r\nimport { Modal } from 'antd';\r\nimport { Checkbox, message } from 'antd';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport TableComponent from '../../components/TableComponent';\r\nimport Input from 'antd/es/input/Input';\r\n\r\nfunction Regions() {\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [addOpen, setAddOpen] = useState(false);\r\n    const [newItem, setNewItem] = useState(null);\r\n\r\n    const showModal = (item) => {\r\n        setOpen(true);\r\n        setSelectedItem(item);\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            await axiosInstance.delete(`regions/delete/${selectedItem.id}`);\r\n            const newDataSource = dataSource.filter(element => element.id !== selectedItem.id);\r\n            setDataSource(newDataSource);\r\n            message.success('Успешно удалено')\r\n            setOpen(false);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('regions/list').then(res => {\r\n            res.data?.forEach(element => {\r\n                element.key = element.id\r\n            });\r\n            setDataSource(res?.data);\r\n        }).catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: '65px',\r\n            style: { alignItems: \"center\" }\r\n        },\r\n        {\r\n            title: 'Название (рус.)',\r\n            dataIndex: 'name_ru',\r\n            key: 'name_ru',\r\n        },\r\n        {\r\n            title: 'Название (туркм.)',\r\n            dataIndex: 'name_tk',\r\n            key: 'name_tk',\r\n        },\r\n        {\r\n            title: 'Навзание (анг.)',\r\n            dataIndex: 'name_en',\r\n            key: 'name_en',\r\n        },\r\n        {\r\n            title: 'Удалить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '110px',\r\n            render: (_, record) => (\r\n                <div className='delete-icon' onClick={() => showModal(record)}>\r\n                    Удалить\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Изменить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '120px',\r\n            render: (_, record) => (\r\n                <div className='update-icon' onClick={() => showAddModal(record)}>\r\n                    Изменить\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    //---------------------------------------------------ADD MODAL-------------------------------------------//\r\n    const showAddModal = (item) => {\r\n        if (item.id) {\r\n            setNewItem(item);\r\n            setSelectedItem(item);\r\n        }\r\n        setAddOpen(true);\r\n    };\r\n\r\n    const handleAddOk = async () => {\r\n        setConfirmLoading(true);\r\n        const formData = new FormData();\r\n        const keys = Object.keys(newItem);\r\n        const values = Object.values(newItem);\r\n        keys.forEach((key, index) => {\r\n            formData.append(key, values[index]);\r\n        })\r\n        try {\r\n            if (newItem.id) {\r\n                const res = await axiosInstance.put(`regions/update/${newItem.id}/`, formData);\r\n                const index = dataSource.findIndex(item => item.id == newItem.id);\r\n                setDataSource(previousState => {\r\n                    const a = previousState;\r\n                    a[index].name_ru = newItem.name_ru;\r\n                    a[index].name_en = newItem.name_en;\r\n                    a[index].name_tk = newItem.name_tk;\r\n                    return a;\r\n                })\r\n            } else {\r\n                const res = await axiosInstance.post('regions/add/', formData);\r\n                newItem.id = res.data?.id;\r\n                setDataSource([...dataSource, newItem])\r\n            }\r\n            setNewItem(null);\r\n            setConfirmLoading(false);\r\n            message.success('Успешно')\r\n            setAddOpen(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleAddCancel = () => {\r\n        setNewItem(null);\r\n        setAddOpen(false);\r\n    };\r\n\r\n    const handleAddChange = (e) => {\r\n        setNewItem({ ...newItem, [e.target.name]: [e.target.value] });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Дополните детали\"\r\n                open={addOpen}\r\n                onOk={handleAddOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleAddCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                width={'600px'}\r\n                okType={'primary'}\r\n                style={{ top: '150px' }}\r\n            >\r\n                <div className='banner-add-container'>\r\n                    <div className='add-left'>\r\n                        <div className='add-column'>\r\n                            Название (рус.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Название (туркм.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Навзание (анг.):\r\n                        </div>\r\n                    </div>\r\n                    <div className='add-right'>\r\n                        <div className='add-column'>\r\n                            <Input name='name_ru' placeholder='Название (рус.)' value={newItem?.name_ru} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_tk' placeholder='Название (туркм.)' value={newItem?.name_tk} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_en' placeholder='Название (анг.)' value={newItem?.name_en} onChange={handleAddChange} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Вы уверены, что хотите удалить?\"\r\n                open={open}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                okButtonProps={{ danger: true }}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            />\r\n            <div className='page'>\r\n                <div className='page-header-content'>\r\n                    <h2>Регионы</h2>\r\n                    <div className='add-button' onClick={showAddModal}>Добавлять</div>\r\n                </div>\r\n                <TableComponent dataSource={dataSource} columns={columns} pagination={false} active={selectedItem?.id} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Regions;"],"names":["_ref","dataSource","columns","pagination","active","loading","_jsx","Table","rowClassName","record","rowIndex","id","_useState","useState","_useState2","_slicedToArray","setDataSource","_useState3","_useState4","open","setOpen","_useState5","_useState6","confirmLoading","setConfirmLoading","_useState7","_useState8","selectedItem","setSelectedItem","_useState9","_useState10","addOpen","setAddOpen","_useState11","_useState12","newItem","setNewItem","handleOk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newDataSource","wrap","_context","prev","next","axiosInstance","concat","filter","element","message","t0","console","log","stop","apply","arguments","useEffect","then","res","_res$data","data","forEach","key","catch","err","title","dataIndex","width","style","alignItems","render","_","className","onClick","item","children","showAddModal","handleAddOk","_ref2","_callee2","formData","keys","values","index","_res$data2","_res","_context2","FormData","Object","append","sent","findIndex","previousState","a","name_ru","name_en","name_tk","_toConsumableArray","handleAddChange","e","_objectSpread","_defineProperty","target","name","value","_jsxs","_Fragment","Modal","onOk","onCancel","cancelText","okText","okType","top","Input","placeholder","onChange","okButtonProps","danger","TableComponent"],"sourceRoot":""}