{"version":3,"file":"static/js/100.3a1ea017.chunk.js","mappings":"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","sources":["components/TableComponent.js","config/axios.js","utils/getToken.js","pages/City/City.js"],"sourcesContent":["import { Table } from 'antd';\r\nimport React from 'react';\r\n\r\nfunction TableComponent({ dataSource, columns, pagination, active, loading }) {\r\n    return (\r\n        <Table\r\n            rowClassName={(record, rowIndex) => record.id == active && 'active-row'}\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={pagination}\r\n            loading={loading ? loading : false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TableComponent;","import axios from 'axios';\r\nimport { getToken } from '../utils/getToken';\r\n\r\nconst token = getToken();\r\nconst BASE_URL = 'https://turkmenexpress.com.tm/api/administrator/';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: BASE_URL,\r\n    timeout: 60000,\r\n    headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'Accept': \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n    }\r\n});\r\n\r\nconst loginPost = async (phone_number, password) => {\r\n    const res = await axios.post(`${BASE_URL}login/`, { phone_number, password });\r\n    return res;\r\n}\r\nexport { axiosInstance, loginPost } ","export const getToken = () => {\r\n    let data = JSON.parse(localStorage.getItem('turkmenExpress-admin'));\r\n    if (data) {\r\n        return data.access\r\n    } else {\r\n        return null\r\n    }\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { Modal, message, Select } from 'antd';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport TableComponent from '../../components/TableComponent';\r\nimport Input from 'antd/es/input/Input';\r\n\r\nfunction City() {\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [addOpen, setAddOpen] = useState(false);\r\n    const [total, setTotal] = useState(null);\r\n    const [selectOptions, setSelectOptions] = useState(null);\r\n    const [selectedRegion, setSelectedRegion] = useState(null);\r\n    const [newItem, setNewItem] = useState(null);\r\n\r\n\r\n    const showModal = (item) => {\r\n        setOpen(true);\r\n        setSelectedItem(item);\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            await axiosInstance.delete(`cities/delete/${selectedItem.id}/`);\r\n            const newDataSource = dataSource.filter(element => element.id !== selectedItem.id);\r\n            setDataSource(newDataSource);\r\n            setSelectedItem(null);\r\n            setOpen(false);\r\n            setConfirmLoading(false);\r\n            message.success('Успешно удалено!');\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n        setSelectedItem(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('cities/list').then(async res => {\r\n            let a = [];\r\n            let b = [];\r\n            const data = await axiosInstance.get('regions/list/');\r\n            data.data.forEach(item => {\r\n                b.push({\r\n                    label: item.name_ru,\r\n                    value: item.name_ru,\r\n                    id: item.id\r\n                })\r\n            })\r\n            setSelectOptions(b);\r\n            setTotal(res.data.count)\r\n            res.data?.results.forEach(element => {\r\n                a.push({\r\n                    key: element.id,\r\n                    id: element.id,\r\n                    name_en: element.name_en,\r\n                    name_tk: element.name_tk,\r\n                    name_ru: element.name_ru,\r\n                    region: element.region?.name_ru\r\n                })\r\n            });\r\n            setDataSource(a);\r\n        }).catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: '65px',\r\n        },\r\n        {\r\n            title: 'Название (рус.)',\r\n            dataIndex: 'name_ru',\r\n            key: 'name_ru',\r\n        },\r\n        {\r\n            title: 'Название (туркм.)',\r\n            dataIndex: 'name_tk',\r\n            key: 'name_tk',\r\n        },\r\n        {\r\n            title: 'Навзание (анг.)',\r\n            dataIndex: 'name_en',\r\n            key: 'name_en',\r\n        },\r\n        {\r\n            title: 'Регион',\r\n            dataIndex: 'region',\r\n            key: 'region',\r\n        },\r\n        {\r\n            title: 'Удалить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '110px',\r\n            render: (_, record) => (\r\n                <div className='delete-icon' onClick={() => showModal(record)}>\r\n                    Удалить\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Изменить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '120px',\r\n            render: (_, record) => (\r\n                <div className='update-icon' onClick={() => showAddModal(record)}>\r\n                    Изменить\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    //---------------------------------------------------ADD MODAL-------------------------------------------//\r\n    const showAddModal = (item) => {\r\n        // setSelectedItem(item);\r\n        if (item.id) {\r\n            setNewItem(item);\r\n            const filtered = selectOptions.filter(option => option.value == item.region);\r\n            setSelectedRegion(filtered[0]);\r\n            setSelectedItem(item);\r\n        } else {\r\n            setSelectedItem(null);\r\n        }\r\n        setAddOpen(true);\r\n    };\r\n\r\n    const handleAddOk = async () => {\r\n        setConfirmLoading(true);\r\n        const formData = new FormData();\r\n        newItem.region = selectedRegion.id;\r\n        const keys = Object.keys(newItem);\r\n        const values = Object.values(newItem);\r\n        keys.forEach((key, index) => {\r\n            formData.append(key, values[index]);\r\n        })\r\n        try {\r\n            if (newItem.id) {\r\n                const res = await axiosInstance.put(`cities/update/${newItem.id}/`, formData);\r\n                const index = dataSource.findIndex(item => item.id == newItem.id);\r\n                setDataSource(previousState => {\r\n                    const a = previousState;\r\n                    a[index].name_ru = newItem.name_ru;\r\n                    a[index].name_en = newItem.name_en;\r\n                    a[index].name_tk = newItem.name_tk;\r\n                    a[index].region = selectedRegion.value;\r\n                    return a;\r\n                })\r\n            } else {\r\n                const res = await axiosInstance.post('cities/add/', formData);\r\n                newItem.region = selectedRegion.value;\r\n                newItem.id = res.data?.id;\r\n                setDataSource([...dataSource, newItem])\r\n            }\r\n            setConfirmLoading(false);\r\n            setSelectedRegion(null);\r\n            setNewItem(null);\r\n            message.success('Успешно')\r\n            setAddOpen(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleAddCancel = () => {\r\n        setAddOpen(false);\r\n        setNewItem(null);\r\n        setSelectedRegion(null);\r\n    };\r\n\r\n    const handleAddChange = (e) => {\r\n        setNewItem({ ...newItem, [e.target.name]: [e.target.value] });\r\n    }\r\n\r\n    //-------------------------------------------------------pagination -----------------------------------------//\r\n    const onPaginationChange = async (page) => {\r\n        let a = [];\r\n        const res = await axiosInstance.get(`cities/list?page=${page}`);\r\n        res.data.results?.forEach(element => {\r\n            a.push({\r\n                key: element.id,\r\n                id: element.id,\r\n                name_en: element.name_en,\r\n                name_tk: element.name_tk,\r\n                name_ru: element.name_ru,\r\n                region: element.region?.name_ru\r\n            })\r\n        });\r\n        setDataSource(a);\r\n    }\r\n\r\n    const handleSelectChange = (value) => {\r\n        const filtered = selectOptions.filter(item => item.value == value);\r\n        setSelectedRegion(filtered[0]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Дополните детали\"\r\n                open={addOpen}\r\n                onOk={handleAddOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleAddCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                width={'600px'}\r\n                okType={'primary'}\r\n                style={{ top: '150px' }}\r\n            >\r\n                <div className='banner-add-container'>\r\n                    <div className='add-left'>\r\n                        <div className='add-column'>\r\n                            Название (рус.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Название (туркм.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Навзание (анг.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Регион:\r\n                        </div>\r\n                    </div>\r\n                    <div className='add-right'>\r\n                        <div className='add-column'>\r\n                            <Input name='name_ru' placeholder='Название (рус.)' value={newItem?.name_ru} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_tk' placeholder='Название (туркм.)' value={newItem?.name_tk} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_en' placeholder='Навзание (анг.)' value={newItem?.name_en} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Select\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                                value={selectedRegion}\r\n                                placeholder={'Регион'}\r\n                                onChange={handleSelectChange}\r\n                                options={selectOptions}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Вы уверены, что хотите удалить?\"\r\n                open={open}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                okButtonProps={{ danger: true }}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            />\r\n            <div className='page'>\r\n                <div className='page-header-content'>\r\n                    <h2>Города и этрапы</h2>\r\n                    <div className='add-button' onClick={showAddModal}>Добавлять</div>\r\n                </div>\r\n                <TableComponent\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                    pagination={{ onChange: onPaginationChange, total: total, pageSize: 20 }}\r\n                    active={selectedItem?.id}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default City;"],"names":["_ref","dataSource","columns","pagination","active","loading","_jsx","Table","rowClassName","record","rowIndex","id","token","data","JSON","parse","localStorage","getItem","access","getToken","BASE_URL","axiosInstance","axios","baseURL","timeout","headers","concat","loginPost","_asyncToGenerator","_regeneratorRuntime","mark","_callee","phone_number","password","res","wrap","_context","prev","next","sent","abrupt","stop","_x","_x2","apply","arguments","_useState","useState","_useState2","_slicedToArray","setDataSource","_useState3","_useState4","open","setOpen","_useState5","_useState6","confirmLoading","setConfirmLoading","_useState7","_useState8","selectedItem","setSelectedItem","_useState9","_useState10","addOpen","setAddOpen","_useState11","_useState12","total","setTotal","_useState13","_useState14","selectOptions","setSelectOptions","_useState15","_useState16","selectedRegion","setSelectedRegion","_useState17","_useState18","newItem","setNewItem","handleOk","newDataSource","filter","element","message","t0","console","log","useEffect","then","_ref2","_callee2","_res$data","a","b","_context2","forEach","item","push","label","name_ru","value","count","results","_element$region","key","name_en","name_tk","region","catch","err","title","dataIndex","width","render","_","className","onClick","children","showAddModal","filtered","option","handleAddOk","_ref3","_callee3","formData","keys","values","index","_res$data2","_res","_context3","FormData","Object","append","findIndex","previousState","_toConsumableArray","handleAddChange","e","_objectSpread","_defineProperty","target","name","onPaginationChange","_ref4","_callee4","page","_res$data$results","_context4","_element$region2","_jsxs","_Fragment","Modal","onOk","onCancel","cancelText","okText","okType","style","top","Input","placeholder","onChange","Select","options","okButtonProps","danger","TableComponent","pageSize"],"sourceRoot":""}