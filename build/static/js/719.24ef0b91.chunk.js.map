{"version":3,"file":"static/js/719.24ef0b91.chunk.js","mappings":"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","sources":["components/TableComponent.js","pages/SettingsList/SettingsList.js"],"sourcesContent":["import { Table } from 'antd';\r\nimport React from 'react';\r\n\r\nfunction TableComponent({ dataSource, columns, pagination, active, loading }) {\r\n    return (\r\n        <Table\r\n            rowClassName={(record, rowIndex) => record.id == active && 'active-row'}\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={pagination}\r\n            loading={loading ? loading : false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TableComponent;","import React, { useEffect, useState } from 'react';\r\nimport TableComponent from '../../components/TableComponent';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport { Modal, message, Upload, Checkbox, Select } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport './SettingsList.css';\r\nimport Input from 'antd/es/input/Input';\r\n\r\nfunction SettingsList() {\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [total, setTotal] = useState(null);\r\n    const [addOpen, setAddOpen] = useState(false);\r\n    const [selectOptions, setSelectOptions] = useState(null);\r\n    const [selectedGroupOption, setSelectedGroupOption] = useState([])\r\n    const [newItem, setNewItem] = useState(null);\r\n    const [pageSize, setPageSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('options/list').then(async (res) => {\r\n            let a = [];\r\n            let b = [];\r\n            setTotal(res.data.count);\r\n            setPageSize(res.data.results.length);\r\n            res.data?.results.forEach(element => {\r\n                a.push({\r\n                    id: element.id,\r\n                    key: element.id,\r\n                    name_ru: element.name_ru,\r\n                    name_en: element.name_en,\r\n                    name_tk: element.name_tk,\r\n                    option_group: element.option_group.name_ru\r\n                })\r\n            });\r\n            setDataSource(a);\r\n            const groupOptions = await axiosInstance.get('options-group/list/');\r\n            groupOptions.data?.forEach(item => {\r\n                b.push({\r\n                    label: item.name_ru,\r\n                    value: item.name_ru,\r\n                    id: item.id\r\n                })\r\n            });\r\n            setSelectOptions(b);\r\n        }).catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: '65px',\r\n        },\r\n        {\r\n            title: 'Название (рус.)',\r\n            dataIndex: 'name_ru',\r\n            key: 'name_ru',\r\n        },\r\n        {\r\n            title: 'Название (туркм.)',\r\n            dataIndex: 'name_tk',\r\n            key: 'name_tk',\r\n        },\r\n        {\r\n            title: 'Навзание (анг.)',\r\n            dataIndex: 'name_en',\r\n            key: 'name_en',\r\n        },\r\n        {\r\n            title: 'Группа опций',\r\n            dataIndex: 'option_group',\r\n            key: 'option_group',\r\n        },\r\n        {\r\n            title: 'Удалить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '110px',\r\n            render: (_, record) => (\r\n                <div className='delete-icon' onClick={() => showModal(record)}>\r\n                    Удалить\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Изменить',\r\n            dataIndex: 'active',\r\n            key: 'active',\r\n            width: '120px',\r\n            render: (_, record) => (\r\n                <div className='update-icon' onClick={() => showAddModal(record)} >\r\n                    Изменить\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const showModal = (item) => {\r\n        setSelectedItem(item);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        try {\r\n            setConfirmLoading(true);\r\n            await axiosInstance.delete(`options/delete/${selectedItem.id}/`);\r\n            const newDataSource = dataSource.filter(element => element.id !== selectedItem.id);\r\n            setDataSource(newDataSource);\r\n            message.success('Успешно удалено')\r\n            setOpen(false);\r\n            setConfirmLoading(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //-----------------------------------------Add Modal-------------------------------------------------//\r\n    const showAddModal = (item) => {\r\n        if (item.id) {\r\n            setSelectedItem(item);\r\n            const filtered = selectOptions.filter(groupOption => groupOption.name_ru == item.option_group);\r\n            setSelectedGroupOption([{ id: filtered[0]?.id, label: item.option_group, value: item.option_group }])\r\n            setNewItem(item);\r\n        }\r\n        setAddOpen(true);\r\n    };\r\n\r\n    const handleAddOk = async () => {\r\n        try {\r\n            if (newItem.id) {\r\n                const formData = new FormData();\r\n                formData.append(\"name_ru\", newItem.name_ru);\r\n                formData.append(\"name_en\", newItem.name_en);\r\n                formData.append(\"name_tk\", newItem.name_tk);\r\n                formData.append('option_group', selectedGroupOption[0].id);\r\n                const res = await axiosInstance.patch(`options/update/${newItem.id}/`, formData);\r\n                const index = dataSource.findIndex(item => item.id == newItem.id);\r\n                setDataSource(previousState => {\r\n                    const a = previousState;\r\n                    a[index].name_ru = newItem.name_ru;\r\n                    a[index].name_en = newItem.name_en;\r\n                    a[index].name_tk = newItem.name_tk;\r\n                    a[index].option_group = selectedGroupOption[0].value;\r\n                    return a;\r\n                })\r\n            } else {\r\n                let a = [];\r\n                setConfirmLoading(true);\r\n                selectedGroupOption.forEach(async groupOption => {\r\n                    const formData = new FormData();\r\n                    formData.append(\"name_ru\", newItem.name_ru);\r\n                    formData.append(\"name_en\", newItem.name_en);\r\n                    formData.append(\"name_tk\", newItem.name_tk);\r\n                    formData.append('option_group', groupOption.id);\r\n                    const res = await axiosInstance.post(`options/add/`, formData);\r\n                    res.data.key = res.data.id;\r\n                    a.push(res.data);\r\n                })\r\n                setDataSource([...dataSource, ...a]);\r\n            }\r\n            setSelectedGroupOption([]);\r\n            setNewItem(null);\r\n            message.success('Успешно добавлено');\r\n            setConfirmLoading(false);\r\n            setAddOpen(false);\r\n        } catch (err) {\r\n            setConfirmLoading(false)\r\n            message.error('Произошла ошибка. Пожалуйста, попробуйте еще раз!')\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    const handleAddCancel = () => {\r\n        setSelectedGroupOption([]);\r\n        setNewItem(null);\r\n        setAddOpen(false);\r\n    };\r\n\r\n    const handleAddChange = (e) => {\r\n        setNewItem({ ...newItem, [e.target.name]: [e.target.value] });\r\n    }\r\n\r\n    //-------------------------------------------------------pagination -----------------------------------------//\r\n    const onPaginationChange = async (page) => {\r\n        let a = [];\r\n        const res = await axiosInstance.get(`options/list?page=${page}`);\r\n        res.data.results?.forEach(element => {\r\n            a.push({\r\n                id: element.id,\r\n                key: element.id,\r\n                name_ru: element.name_ru,\r\n                name_en: element.name_en,\r\n                name_tk: element.name_tk,\r\n                option_group: element.option_group.name_ru\r\n            })\r\n        });\r\n        setDataSource(a);\r\n    }\r\n\r\n    const handleUpdateSelectChange = (e) => {\r\n        let a = [];\r\n        selectOptions.forEach(item => {\r\n            e.forEach(selected => item.value == selected && a.push({ id: item.id, label: selected, value: selected }));\r\n        });\r\n        setSelectedGroupOption(a);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Дополните детали для добавления\"\r\n                open={addOpen}\r\n                onOk={handleAddOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleAddCancel}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                width={'600px'}\r\n                okType={'primary'}\r\n                style={{ top: '100px' }}\r\n            >\r\n                <div className='banner-add-container'>\r\n                    <div className='add-left'>\r\n                        <div className='add-column'>\r\n                            Название (рус.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Название (туркм.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Навзание (анг.):\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            Группа опций:\r\n                        </div>\r\n                    </div>\r\n                    <div className='add-right'>\r\n                        <div className='add-column'>\r\n                            <Input name='name_ru' placeholder='Название (рус.)' value={newItem?.name_ru} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_tk' placeholder='Название (туркм.)' value={newItem?.name_tk} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Input name='name_en' placeholder='Название (анг.)' value={newItem?.name_en} onChange={handleAddChange} />\r\n                        </div>\r\n                        <div className='add-column'>\r\n                            <Select\r\n                                value={selectedGroupOption}\r\n                                mode=\"multiple\"\r\n                                allowClear\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                                placeholder=\"Выберите группа опцию\"\r\n                                onChange={(e) => handleUpdateSelectChange(e)}\r\n                                options={selectOptions}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Вы уверены, что хотите удалить?\"\r\n                open={open}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                okButtonProps={{ danger: true }}\r\n                cancelText={'Отмена'}\r\n                okText={'Да'}\r\n                okType={'primary'}\r\n                style={{\r\n                    top: '200px'\r\n                }}\r\n            />\r\n            <div className='page'>\r\n                <div className='page-header-content'>\r\n                    <h2>Список опций</h2>\r\n                    <div className='add-button' onClick={showAddModal}>Добавлять</div>\r\n                </div>\r\n                <TableComponent\r\n                    active={selectedItem?.id}\r\n                    columns={columns}\r\n                    dataSource={dataSource}\r\n                    pagination={{ onChange: onPaginationChange, total: total, pageSize: pageSize, showQuickJumper: true }}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SettingsList;"],"names":["_ref","dataSource","columns","pagination","active","loading","_jsx","Table","rowClassName","record","rowIndex","id","_useState","useState","_useState2","_slicedToArray","setDataSource","_useState3","_useState4","open","setOpen","_useState5","_useState6","confirmLoading","setConfirmLoading","_useState7","_useState8","selectedItem","setSelectedItem","_useState9","_useState10","total","setTotal","_useState11","_useState12","addOpen","setAddOpen","_useState13","_useState14","selectOptions","setSelectOptions","_useState15","_useState16","selectedGroupOption","setSelectedGroupOption","_useState17","_useState18","newItem","setNewItem","_useState19","_useState20","pageSize","setPageSize","useEffect","axiosInstance","then","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","_res$data","_groupOptions$data","a","b","groupOptions","wrap","_context","prev","next","data","count","results","length","forEach","element","push","key","name_ru","name_en","name_tk","option_group","sent","item","label","value","stop","_x","apply","arguments","catch","err","console","log","title","dataIndex","width","render","_","className","onClick","showModal","children","showAddModal","handleOk","_ref2","_callee2","newDataSource","_context2","concat","filter","message","t0","_filtered$","filtered","groupOption","handleAddOk","_ref3","_callee4","formData","index","_context4","FormData","append","findIndex","previousState","_ref4","_callee3","_context3","_x2","_toConsumableArray","handleAddChange","e","_objectSpread","_defineProperty","target","name","onPaginationChange","_ref5","_callee5","page","_res$data$results","_context5","_x3","_jsxs","_Fragment","Modal","onOk","onCancel","cancelText","okText","okType","style","top","Input","placeholder","onChange","Select","mode","allowClear","selected","handleUpdateSelectChange","options","okButtonProps","danger","TableComponent","showQuickJumper"],"sourceRoot":""}